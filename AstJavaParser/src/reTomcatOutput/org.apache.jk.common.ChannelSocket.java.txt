ClassOrInterfaceDeclaration
	FieldDeclaration
		VariableDeclarator
			getLog
				ClassExpr
				org
			log
	FieldDeclaration
		VariableDeclarator
			startPort
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			maxPort
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			startPort
			port
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			backlog
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			inet
	FieldDeclaration
		VariableDeclarator
			serverTimeout
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			BooleanLiteralExpr
			tcpNoDelay
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			linger
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			socketTimeout
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			-
			bufferSize
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			AjpConstants
			packetSize
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			requestCount
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			createThreadPool
				BooleanLiteralExpr
				ThreadPool
			tp
	ConstructorDeclaration
		BlockStmt
	MethodDeclaration
		BlockStmt
			ReturnStmt
				tp
	MethodDeclaration
		BlockStmt
			ReturnStmt
				requestCount
		PrimitiveType
	MethodDeclaration
		BlockStmt
			port
			port
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				port
		PrimitiveType
	MethodDeclaration
		BlockStmt
			inet
	MethodDeclaration
		BlockStmt
			TryStmt
				CatchClause
					BlockStmt
						error
							+
								StringLiteralExpr
								inet
							ex
							log
				BlockStmt
					getByName
						inet
						InetAddress
	MethodDeclaration
		BlockStmt
			IfStmt
				!=
					inet
					NullLiteralExpr
				ReturnStmt
					toString
						inet
			ReturnStmt
				StringLiteralExpr
	MethodDeclaration
		BlockStmt
			timeout
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				serverTimeout
		PrimitiveType
	MethodDeclaration
		BlockStmt
			tcpNoDelay
			b
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				tcpNoDelay
		PrimitiveType
	MethodDeclaration
		BlockStmt
			linger
			i
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				linger
		PrimitiveType
	MethodDeclaration
		BlockStmt
			socketTimeout
			i
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				socketTimeout
		PrimitiveType
	MethodDeclaration
		BlockStmt
			maxPort
			i
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				maxPort
		PrimitiveType
	MethodDeclaration
		BlockStmt
			bufferSize
			bs
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				bufferSize
		PrimitiveType
	MethodDeclaration
		BlockStmt
			IfStmt
				<
					ps
					AjpConstants
				BlockStmt
					ps
					AjpConstants
			packetSize
			ps
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				packetSize
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				-
					port
					startPort
		PrimitiveType
	MethodDeclaration
		BlockStmt
			setDaemon
				b
				tp
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				getDaemon
					tp
		PrimitiveType
	MethodDeclaration
		BlockStmt
			IfStmt
				isDebugEnabled
					log
				debug
					+
						StringLiteralExpr
						i
					log
			setMaxThreads
				i
				tp
		PrimitiveType
	MethodDeclaration
		BlockStmt
			IfStmt
				isDebugEnabled
					log
				debug
					+
						StringLiteralExpr
						i
					log
			setMinSpareThreads
				i
				tp
		PrimitiveType
	MethodDeclaration
		BlockStmt
			IfStmt
				isDebugEnabled
					log
				debug
					+
						StringLiteralExpr
						i
					log
			setMaxSpareThreads
				i
				tp
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				getMaxThreads
					tp
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				getMinSpareThreads
					tp
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				getMaxSpareThreads
					tp
		PrimitiveType
	MethodDeclaration
		BlockStmt
			i
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				backlog
		PrimitiveType
	FieldDeclaration
		VariableDeclarator
			sSocket
	FieldDeclaration
		VariableDeclarator
			socketNote
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			isNote
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			osNote
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			notifNote
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			BooleanLiteralExpr
			paused
			PrimitiveType
	MethodDeclaration
		BlockStmt
			SynchronizedStmt
				BlockStmt
					paused
					BooleanLiteralExpr
					unLockSocket
	MethodDeclaration
		BlockStmt
			SynchronizedStmt
				BlockStmt
					paused
					BooleanLiteralExpr
					notify
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					sSocket
					NullLiteralExpr
				ReturnStmt
			SynchronizedStmt
				BlockStmt
					WhileStmt
						BlockStmt
							TryStmt
								CatchClause
									BlockStmt
								BlockStmt
									wait
						paused
			VariableDeclarator
				accept
					sSocket
				s
			setNote
				socketNote
				s
				ep
			IfStmt
				isDebugEnabled
					log
				debug
					+
						StringLiteralExpr
						s
					log
			TryStmt
				CatchClause
					BlockStmt
						debug
							StringLiteralExpr
							sex
							log
				BlockStmt
					setSocketOptions
						s
			++
				requestCount
			VariableDeclarator
				getInputStream
					s
				is
			VariableDeclarator
				os
			IfStmt
				>
					bufferSize
				os
				getOutputStream
					s
				os
				getOutputStream
					s
				bufferSize
			setNote
				isNote
				is
				ep
			setNote
				osNote
				os
				ep
			setControl
				tp
				ep
	MethodDeclaration
		BlockStmt
			IfStmt
				>
					socketTimeout
				setSoTimeout
					socketTimeout
					s
			setTcpNoDelay
				tcpNoDelay
				s
			IfStmt
				>
					linger
				setSoLinger
					BooleanLiteralExpr
					linger
					s
	MethodDeclaration
		BlockStmt
			requestCount
	MethodDeclaration
		BlockStmt
			destroy
			init
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					startPort
				BlockStmt
					port
					IfStmt
						isInfoEnabled
							log
						info
							StringLiteralExpr
							log
					running
					BooleanLiteralExpr
					ReturnStmt
			VariableDeclarator
				maxPort
				endPort
				PrimitiveType
			IfStmt
				<
					endPort
					startPort
				endPort
				startPort
			ForStmt
				BlockStmt
					TryStmt
						CatchClause
							BlockStmt
								IfStmt
									isInfoEnabled
										log
									info
										+
											+
												+
													StringLiteralExpr
													i
												StringLiteralExpr
											toString
												ex
										log
								ContinueStmt
						BlockStmt
							IfStmt
								==
									inet
									NullLiteralExpr
								BlockStmt
									sSocket
									i
									backlog
									inet
								BlockStmt
									sSocket
									i
									backlog
							port
							i
							BreakStmt
				<=
					i
					endPort
				VariableDeclarator
					startPort
					i
					PrimitiveType
				++
					i
			IfStmt
				==
					sSocket
					NullLiteralExpr
				BlockStmt
					error
						+
							+
								+
									StringLiteralExpr
									startPort
								StringLiteralExpr
							endPort
						log
					ReturnStmt
			IfStmt
				isInfoEnabled
					log
				info
					+
						+
							+
								StringLiteralExpr
								getAddress
							StringLiteralExpr
						port
					log
			IfStmt
				&&
					&&
						equals
							name
							StringLiteralExpr
						!=
							port
							startPort
					==
						getLocalId
							wEnv
				BlockStmt
					setLocalId
						-
							port
							startPort
						wEnv
			IfStmt
				>
					serverTimeout
				setSoTimeout
					serverTimeout
					sSocket
			IfStmt
				&&
					==
						next
						NullLiteralExpr
					!=
						wEnv
						NullLiteralExpr
				BlockStmt
					IfStmt
						!=
							nextName
							NullLiteralExpr
						setNext
							getHandler
								nextName
								wEnv
					IfStmt
						==
							next
							NullLiteralExpr
						next
						getHandler
							StringLiteralExpr
							wEnv
					IfStmt
						==
							next
							NullLiteralExpr
						next
						getHandler
							StringLiteralExpr
							wEnv
			JMXRequestNote
			getNoteId
				WorkerEnv
				StringLiteralExpr
				wEnv
			running
			BooleanLiteralExpr
			IfStmt
				!=
					NullLiteralExpr
				BlockStmt
					TryStmt
						CatchClause
							BlockStmt
								error
									StringLiteralExpr
									log
						BlockStmt
							tpOName
							+
								+
									domain
									StringLiteralExpr
								getChannelName
							registerComponent
								tp
								tpOName
								NullLiteralExpr
								getRegistry
									NullLiteralExpr
									NullLiteralExpr
									Registry
							rgOName
							+
								+
									domain
									StringLiteralExpr
								getChannelName
							registerComponent
								global
								rgOName
								NullLiteralExpr
								getRegistry
									NullLiteralExpr
									NullLiteralExpr
									Registry
			start
				tp
			VariableDeclarator
				acceptAjp
			runIt
				acceptAjp
				tp
	FieldDeclaration
		VariableDeclarator
			tpOName
	FieldDeclaration
		VariableDeclarator
			rgOName
	FieldDeclaration
		VariableDeclarator
			global
	FieldDeclaration
		VariableDeclarator
			JMXRequestNote
			PrimitiveType
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					sSocket
					NullLiteralExpr
				init
	MethodDeclaration
		BlockStmt
			destroy
	MethodDeclaration
		BlockStmt
			IfStmt
				!=
					NullLiteralExpr
				BlockStmt
					TryStmt
						CatchClause
							BlockStmt
								warn
									StringLiteralExpr
									log
						BlockStmt
							VariableDeclarator
								getRequestProcessor
									req
								rp
							setGlobalProcessor
								global
								rp
							VariableDeclarator
								+
									+
										+
											+
												getDomain
												StringLiteralExpr
											getChannelName
										StringLiteralExpr
									count
								roname
							setNote
								JMXRequestNote
								roname
								ep
							registerComponent
								rp
								roname
								NullLiteralExpr
								getRegistry
									NullLiteralExpr
									NullLiteralExpr
									Registry
		PrimitiveType
	MethodDeclaration
		BlockStmt
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				getNote
					socketNote
					ep
				s
			close
				s
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				s
			VariableDeclarator
				inet
				ladr
			IfStmt
				==
					port
				ReturnStmt
			IfStmt
				||
					==
						ladr
						NullLiteralExpr
					equals
						getHostAddress
							ladr
						StringLiteralExpr
				BlockStmt
					ladr
					getLocalHost
						InetAddress
			s
			ladr
			port
			setSoLinger
				BooleanLiteralExpr
				s
			close
				s
	MethodDeclaration
		BlockStmt
			running
			BooleanLiteralExpr
			TryStmt
				CatchClause
					BlockStmt
						info
							+
								+
									+
										StringLiteralExpr
										port
									StringLiteralExpr
								toString
									e
							log
						IfStmt
							isDebugEnabled
								log
							debug
								StringLiteralExpr
								e
								log
				BlockStmt
					IfStmt
						==
							port
						ReturnStmt
					shutdown
						tp
					IfStmt
						!
							paused
						BlockStmt
							unLockSocket
					IfStmt
						!=
							sSocket
							NullLiteralExpr
						BlockStmt
							close
								sSocket
					IfStmt
						!=
							tpOName
							NullLiteralExpr
						BlockStmt
							unregisterComponent
								tpOName
								getRegistry
									NullLiteralExpr
									NullLiteralExpr
									Registry
					IfStmt
						!=
							rgOName
							NullLiteralExpr
						BlockStmt
							unregisterComponent
								rgOName
								getRegistry
									NullLiteralExpr
									NullLiteralExpr
									Registry
	MethodDeclaration
		BlockStmt
			end
				msg
			VariableDeclarator
				getBuffer
					msg
				buf
				PrimitiveType
			VariableDeclarator
				getLen
					msg
				len
				PrimitiveType
			IfStmt
				isTraceEnabled
					log
				trace
					+
						+
							+
								StringLiteralExpr
								len
							StringLiteralExpr
						buf
					log
			VariableDeclarator
				getNote
					osNote
					ep
				os
			write
				buf
				len
				os
			ReturnStmt
				len
		PrimitiveType
	MethodDeclaration
		BlockStmt
			IfStmt
				>
					bufferSize
				BlockStmt
					VariableDeclarator
						getNote
							osNote
							ep
						os
					flush
						os
			ReturnStmt
		PrimitiveType
	MethodDeclaration
		BlockStmt
			IfStmt
				isDebugEnabled
					log
				BlockStmt
					debug
						StringLiteralExpr
						log
			VariableDeclarator
				getBuffer
					msg
				buf
				PrimitiveType
			VariableDeclarator
				getHeaderLength
					msg
				hlen
				PrimitiveType
			VariableDeclarator
				read
					ep
					buf
					hlen
				rd
				PrimitiveType
			IfStmt
				<
					rd
				BlockStmt
					ReturnStmt
						rd
			processHeader
				msg
			VariableDeclarator
				getLen
					msg
				blen
				PrimitiveType
			VariableDeclarator
				total_read
				PrimitiveType
			total_read
			read
				ep
				buf
				hlen
				blen
			IfStmt
				&&
					<=
						total_read
					>
						blen
				BlockStmt
					warn
						+
							StringLiteralExpr
							blen
						log
					ReturnStmt
						-
			IfStmt
				!=
					total_read
					blen
				BlockStmt
					warn
						+
							+
								+
									StringLiteralExpr
									blen
								StringLiteralExpr
							total_read
						log
					ReturnStmt
						-
			ReturnStmt
				total_read
		PrimitiveType
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				getNote
					isNote
					ep
				is
			VariableDeclarator
				pos
				PrimitiveType
			VariableDeclarator
				got
				PrimitiveType
			WhileStmt
				BlockStmt
					TryStmt
						CatchClause
							BlockStmt
								IfStmt
									>
										pos
									BlockStmt
										debug
											StringLiteralExpr
											sex
											log
									BlockStmt
										info
											+
												+
													StringLiteralExpr
													pos
												StringLiteralExpr
											sex
											log
								got
								-
						BlockStmt
							got
							read
								b
								+
									pos
									offset
								-
									len
									pos
								is
					IfStmt
						isTraceEnabled
							log
						BlockStmt
							trace
								+
									+
										+
											+
												+
													+
														+
															+
																+
																	StringLiteralExpr
																	b
																StringLiteralExpr
															==
																b
																NullLiteralExpr
															b
														StringLiteralExpr
													offset
												StringLiteralExpr
											len
										StringLiteralExpr
									got
								log
					IfStmt
						<=
							got
						BlockStmt
							ReturnStmt
								-
					pos
					got
				<
					pos
					len
			ReturnStmt
				pos
		PrimitiveType
		PrimitiveType
		PrimitiveType
		PrimitiveType
	FieldDeclaration
		VariableDeclarator
			BooleanLiteralExpr
			running
			PrimitiveType
	MethodDeclaration
		BlockStmt
			IfStmt
				isDebugEnabled
					log
				debug
					+
						StringLiteralExpr
						port
					log
			WhileStmt
				BlockStmt
					TryStmt
						CatchClause
							BlockStmt
								IfStmt
									running
									warn
										StringLiteralExpr
										ex
										log
						BlockStmt
							VariableDeclarator
								createMsgContext
									packetSize
								ep
							setSource
								ep
							setWorkerEnv
								wEnv
								ep
							accept
								ep
							IfStmt
								!
									running
								BreakStmt
							VariableDeclarator
								ep
								ajpConn
							runIt
								ajpConn
								tp
				running
	MethodDeclaration
		BlockStmt
			TryStmt
				CatchClause
					BlockStmt
						VariableDeclarator
							getMessage
								ex
							msg
						IfStmt
							&&
								!=
									msg
									NullLiteralExpr
								>=
									indexOf
										StringLiteralExpr
										msg
							IfStmt
								&&
									!=
										msg
										NullLiteralExpr
									>=
										indexOf
											StringLiteralExpr
											msg
								error
									StringLiteralExpr
									ex
									log
								debug
									StringLiteralExpr
									log
							debug
								StringLiteralExpr
								log
				BlockStmt
					TryStmt
						CatchClause
							BlockStmt
								error
									StringLiteralExpr
									e
									log
						BlockStmt
							close
								ep
					TryStmt
						CatchClause
							BlockStmt
								error
									StringLiteralExpr
									ee
									log
						BlockStmt
							VariableDeclarator
								getRequest
									ep
								req
							IfStmt
								!=
									req
									NullLiteralExpr
								BlockStmt
									VariableDeclarator
										getNote
											JMXRequestNote
											ep
										roname
									IfStmt
										!=
											roname
											NullLiteralExpr
										BlockStmt
											unregisterComponent
												roname
												getRegistry
													NullLiteralExpr
													NullLiteralExpr
													Registry
									setGlobalProcessor
										NullLiteralExpr
										getRequestProcessor
											req
				BlockStmt
					VariableDeclarator
						packetSize
						recv
					WhileStmt
						BlockStmt
							IfStmt
								paused
								BlockStmt
									BreakStmt
							VariableDeclarator
								receive
									recv
									ep
								status
								PrimitiveType
							IfStmt
								<=
									status
								BlockStmt
									IfStmt
										==
											status
											-
										warn
											+
												StringLiteralExpr
												status
											log
										debug
											StringLiteralExpr
											log
									BreakStmt
							setLong
								MsgContext
								currentTimeMillis
									System
								ep
							setType
								ep
							status
							invoke
								recv
								ep
							IfStmt
								!=
									status
									JkHandler
								BlockStmt
									warn
										+
											StringLiteralExpr
											status
										log
									action
										ActionCode
										getResponse
											getRequest
												ep
										ep
									BreakStmt
						running
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				getType
					ep
				type
				PrimitiveType
			SwitchStmt
				SwitchEntryStmt
					JkHandler
					IfStmt
						isDebugEnabled
							log
						debug
							StringLiteralExpr
							log
					ReturnStmt
						receive
							msg
							ep
				SwitchEntryStmt
					JkHandler
					ReturnStmt
						send
							msg
							ep
				SwitchEntryStmt
					JkHandler
					ReturnStmt
						flush
							msg
							ep
				type
			IfStmt
				isDebugEnabled
					log
				debug
					+
						+
							+
								StringLiteralExpr
								type
							StringLiteralExpr
						next
					log
			IfStmt
				!=
					nSupport
					NullLiteralExpr
				BlockStmt
					VariableDeclarator
						getNote
							notifNote
							ep
						notif
					IfStmt
						==
							notif
							NullLiteralExpr
						BlockStmt
							notif
							StringLiteralExpr
							ep
							requestCount
							setNote
								notifNote
								notif
								ep
					sendNotification
						notif
						nSupport
			IfStmt
				!=
					next
					NullLiteralExpr
				BlockStmt
					info
						StringLiteralExpr
						log
				BlockStmt
					ReturnStmt
						invoke
							msg
							ep
							next
			ReturnStmt
				OK
		PrimitiveType
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				getNote
					socketNote
					ep
				s
			ReturnStmt
				isSameAddress
					getLocalAddress
						s
					getInetAddress
						s
		PrimitiveType
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				StringLiteralExpr
				encodedAddr
			IfStmt
				&&
					!=
						inet
						NullLiteralExpr
					!
						equals
							getHostAddress
								inet
							StringLiteralExpr
				BlockStmt
					encodedAddr
					getAddress
					IfStmt
						startsWith
							StringLiteralExpr
							encodedAddr
						encodedAddr
						substring
							encodedAddr
					encodedAddr
					+
						encode
							encodedAddr
							URLEncoder
						StringLiteralExpr
			ReturnStmt
				+
					+
						StringLiteralExpr
						encodedAddr
					port
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				getAddress
					server
				serverAddr
				PrimitiveType
			VariableDeclarator
				getAddress
					client
				clientAddr
				PrimitiveType
			IfStmt
				!=
					serverAddr
					clientAddr
				ReturnStmt
					BooleanLiteralExpr
			VariableDeclarator
				BooleanLiteralExpr
				match
				PrimitiveType
			ForStmt
				BlockStmt
					IfStmt
						!=
							i
							serverAddr
							i
							clientAddr
						BlockStmt
							match
							BooleanLiteralExpr
							BreakStmt
				<
					i
					serverAddr
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			IfStmt
				match
				ReturnStmt
					BooleanLiteralExpr
			ForStmt
				BlockStmt
					IfStmt
						!=
							i
							serverAddr
							-
								-
									serverAddr
								i
							clientAddr
						ReturnStmt
							BooleanLiteralExpr
				<
					i
					serverAddr
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			ReturnStmt
				BooleanLiteralExpr
		PrimitiveType
	MethodDeclaration
		BlockStmt
			IfStmt
				!=
					nSupport
					NullLiteralExpr
				sendNotification
					notification
					nSupport
	FieldDeclaration
		VariableDeclarator
			NullLiteralExpr
			nSupport
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					nSupport
					NullLiteralExpr
				nSupport
			addNotificationListener
				listener
				filter
				handback
				nSupport
	MethodDeclaration
		BlockStmt
			IfStmt
				!=
					nSupport
					NullLiteralExpr
				removeNotificationListener
					listener
					nSupport
	FieldDeclaration
		VariableDeclarator
			notifInfo
	MethodDeclaration
		BlockStmt
			info
	MethodDeclaration
		BlockStmt
			ReturnStmt
				notifInfo
	ClassOrInterfaceDeclaration
		FieldDeclaration
			VariableDeclarator
				wajp
		ConstructorDeclaration
			BlockStmt
				wajp
		MethodDeclaration
			BlockStmt
				ReturnStmt
					NullLiteralExpr
		MethodDeclaration
			BlockStmt
				acceptConnections
					wajp
	ClassOrInterfaceDeclaration
		FieldDeclaration
			VariableDeclarator
				wajp
		FieldDeclaration
			VariableDeclarator
				ep
		ConstructorDeclaration
			BlockStmt
				wajp
				ep
		MethodDeclaration
			BlockStmt
				ReturnStmt
					NullLiteralExpr
		MethodDeclaration
			BlockStmt
				processConnection
					ep
					wajp
				ep
				NullLiteralExpr

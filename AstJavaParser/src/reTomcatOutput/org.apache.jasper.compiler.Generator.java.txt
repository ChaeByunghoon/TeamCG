ClassOrInterfaceDeclaration
	FieldDeclaration
		VariableDeclarator
			ArrayInitializerExpr
				ClassExpr
			OBJECT_CLASS
	FieldDeclaration
		VariableDeclarator
			getProperty
				StringLiteralExpr
				StringLiteralExpr
				System
			VAR_EXPRESSIONFACTORY
	FieldDeclaration
		VariableDeclarator
			getProperty
				StringLiteralExpr
				StringLiteralExpr
				System
			VAR_ANNOTATIONPROCESSOR
	FieldDeclaration
		VariableDeclarator
			getBoolean
				StringLiteralExpr
				Boolean
			POOL_TAGS_WITH_EXTENDS
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			booleanValue
				valueOf
					getProperty
						StringLiteralExpr
						StringLiteralExpr
						System
					Boolean
			STRICT_GET_PROPERTY
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			out
	FieldDeclaration
		VariableDeclarator
			methodsBuffered
	FieldDeclaration
		VariableDeclarator
			fragmentHelperClass
	FieldDeclaration
		VariableDeclarator
			err
	FieldDeclaration
		VariableDeclarator
			beanInfo
	FieldDeclaration
		VariableDeclarator
			varInfoNames
	FieldDeclaration
		VariableDeclarator
			ctxt
	FieldDeclaration
		VariableDeclarator
			isPoolingEnabled
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			breakAtLF
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			jspIdPrefix
	FieldDeclaration
		VariableDeclarator
			jspId
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			pageInfo
	FieldDeclaration
		VariableDeclarator
			tagHandlerPoolNames
	FieldDeclaration
		VariableDeclarator
			charArrayBuffer
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					s
					NullLiteralExpr
				ReturnStmt
					StringLiteralExpr
			ReturnStmt
				+
					+
						CharLiteralExpr
						escape
							s
					CharLiteralExpr
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					s
					NullLiteralExpr
				ReturnStmt
					StringLiteralExpr
			VariableDeclarator
				b
			ForStmt
				BlockStmt
					VariableDeclarator
						charAt
							i
							s
						c
						PrimitiveType
					IfStmt
						==
							c
							CharLiteralExpr
						IfStmt
							==
								c
								CharLiteralExpr
							IfStmt
								==
									c
									CharLiteralExpr
								IfStmt
									==
										c
										CharLiteralExpr
									append
										c
										b
									append
										CharLiteralExpr
										append
											CharLiteralExpr
											b
								append
									CharLiteralExpr
									append
										CharLiteralExpr
										b
							append
								CharLiteralExpr
								append
									CharLiteralExpr
									b
						append
							CharLiteralExpr
							append
								CharLiteralExpr
								b
				<
					i
					length
						s
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			ReturnStmt
				toString
					b
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				b
			append
				CharLiteralExpr
				b
			IfStmt
				==
					c
					CharLiteralExpr
				IfStmt
					==
						c
						CharLiteralExpr
					IfStmt
						==
							c
							CharLiteralExpr
						IfStmt
							==
								c
								CharLiteralExpr
							append
								c
								b
							append
								CharLiteralExpr
								append
									CharLiteralExpr
									b
						append
							CharLiteralExpr
							append
								CharLiteralExpr
								b
					append
						CharLiteralExpr
						append
							CharLiteralExpr
							b
				append
					CharLiteralExpr
					append
						CharLiteralExpr
						b
			append
				CharLiteralExpr
				b
			ReturnStmt
				toString
					b
		PrimitiveType
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					NullLiteralExpr
				BlockStmt
					VariableDeclarator
						sb
					VariableDeclarator
						getServletJavaFileName
							ctxt
						name
					append
						CharLiteralExpr
						append
							abs
								hashCode
									name
								Math
							append
								StringLiteralExpr
								sb
					toString
						sb
			ReturnStmt
				+
					++
	MethodDeclaration
		BlockStmt
			ClassOrInterfaceDeclaration
				FieldDeclaration
					VariableDeclarator
						BooleanLiteralExpr
						getServletInfoGenerated
						PrimitiveType
				MethodDeclaration
					BlockStmt
						IfStmt
							getServletInfoGenerated
							BlockStmt
								ReturnStmt
						VariableDeclarator
							getAttributeValue
								StringLiteralExpr
								n
							info
						IfStmt
							==
								info
								NullLiteralExpr
							ReturnStmt
						getServletInfoGenerated
						BooleanLiteralExpr
						printil
							StringLiteralExpr
							out
						pushIndent
							out
						printin
							StringLiteralExpr
							out
						print
							quote
								info
							out
						println
							StringLiteralExpr
							out
						popIndent
							out
						printil
							StringLiteralExpr
							out
						println
							out
				MethodDeclaration
					BlockStmt
						setBeginJavaLine
							getJavaLine
								out
							n
						printMultiLn
							getText
								n
							out
						println
							out
						setEndJavaLine
							getJavaLine
								out
							n
				MethodDeclaration
					BlockStmt
						IfStmt
							useTagPlugin
								n
							BlockStmt
								visitBody
									n
							BlockStmt
								IfStmt
									!=
										getAtSTag
											n
										NullLiteralExpr
									BlockStmt
										visit
											getAtSTag
												n
								visitBody
									n
								IfStmt
									!=
										getAtETag
											n
										NullLiteralExpr
									BlockStmt
										visit
											getAtETag
												n
			println
				out
			visit
				page
	MethodDeclaration
		BlockStmt
			ClassOrInterfaceDeclaration
				FieldDeclaration
					VariableDeclarator
						names
				ConstructorDeclaration
					BlockStmt
						names
						v
				MethodDeclaration
					BlockStmt
						IfStmt
							!
								implementsSimpleTag
									n
							BlockStmt
								VariableDeclarator
									createTagHandlerPoolName
										getPrefix
											n
										getLocalName
											n
										getAttributes
											n
										getNamedAttributeNodes
											n
										hasEmptyBody
											n
									name
								setTagHandlerPoolName
									name
									n
								IfStmt
									!
										contains
											name
											names
									BlockStmt
										add
											name
											names
						visitBody
							n
				MethodDeclaration
					BlockStmt
						VariableDeclarator
							NullLiteralExpr
							poolName
						poolName
						+
							+
								+
									StringLiteralExpr
									prefix
								StringLiteralExpr
							shortName
						IfStmt
							!=
								attrs
								NullLiteralExpr
							BlockStmt
								VariableDeclarator
									+
										getLength
											attrs
										size
											namedAttrs
									attrNames
								ForStmt
									BlockStmt
										i
										attrNames
										getQName
											i
											attrs
									<
										i
										attrNames
									VariableDeclarator
										i
										PrimitiveType
									++
										i
								ForStmt
									BlockStmt
										+
											getLength
												attrs
											i
										attrNames
										getQName
											getNode
												i
												namedAttrs
									<
										i
										size
											namedAttrs
									VariableDeclarator
										i
										PrimitiveType
									++
										i
								sort
									attrNames
									reverseOrder
										Collections
									Arrays
								IfStmt
									>
										attrNames
									BlockStmt
										poolName
										+
											poolName
											StringLiteralExpr
								ForStmt
									BlockStmt
										poolName
										+
											+
												poolName
												StringLiteralExpr
											i
											attrNames
									<
										i
										attrNames
									VariableDeclarator
										i
										PrimitiveType
									++
										i
						IfStmt
							hasEmptyBody
							BlockStmt
								poolName
								+
									poolName
									StringLiteralExpr
						ReturnStmt
							makeJavaIdentifier
								poolName
								JspUtil
					PrimitiveType
			visit
				tagHandlerPoolNames
				page
	MethodDeclaration
		BlockStmt
			ClassOrInterfaceDeclaration
				FieldDeclaration
					VariableDeclarator
						vars
				ConstructorDeclaration
					BlockStmt
						vars
				MethodDeclaration
					BlockStmt
						IfStmt
							>
								getCustomNestingLevel
									n
							BlockStmt
								VariableDeclarator
									getTagVariableInfos
										n
									tagVarInfos
								VariableDeclarator
									getVariableInfos
										n
									varInfos
								IfStmt
									>
										varInfos
									BlockStmt
										ForStmt
											BlockStmt
												VariableDeclarator
													getNameGiven
														i
														tagVarInfos
													varName
												IfStmt
													==
														varName
														NullLiteralExpr
													IfStmt
														!=
															getNameFromAttribute
																i
																tagVarInfos
															NullLiteralExpr
														BlockStmt
															ContinueStmt
													BlockStmt
														varName
														getAttributeString
															getNameFromAttribute
																i
																tagVarInfos
															getTagData
																n
												VariableDeclarator
													+
														+
															+
																StringLiteralExpr
																varName
															StringLiteralExpr
														getCustomNestingLevel
															n
													tmpVarName
												IfStmt
													!
														contains
															tmpVarName
															vars
													BlockStmt
														add
															tmpVarName
															vars
														printin
															getClassName
																i
																tagVarInfos
															out
														print
															StringLiteralExpr
															out
														print
															tmpVarName
															out
														print
															StringLiteralExpr
															out
														print
															NullLiteralExpr
															out
														println
															StringLiteralExpr
															out
											<
												i
												tagVarInfos
											VariableDeclarator
												i
												PrimitiveType
											++
												i
									BlockStmt
										ForStmt
											BlockStmt
												VariableDeclarator
													getVarName
														i
														varInfos
													varName
												VariableDeclarator
													+
														+
															+
																StringLiteralExpr
																varName
															StringLiteralExpr
														getCustomNestingLevel
															n
													tmpVarName
												IfStmt
													!
														contains
															tmpVarName
															vars
													BlockStmt
														add
															tmpVarName
															vars
														printin
															getClassName
																i
																varInfos
															out
														print
															StringLiteralExpr
															out
														print
															tmpVarName
															out
														print
															StringLiteralExpr
															out
														print
															NullLiteralExpr
															out
														println
															StringLiteralExpr
															out
											<
												i
												varInfos
											VariableDeclarator
												i
												PrimitiveType
											++
												i
						visitBody
							n
			visit
				page
	MethodDeclaration
		BlockStmt
			IfStmt
				isTagFile
					ctxt
				BlockStmt
					printil
						StringLiteralExpr
						out
				BlockStmt
					printil
						StringLiteralExpr
						out
			pushIndent
				out
			IfStmt
				isPoolingEnabled
				BlockStmt
					ForStmt
						BlockStmt
							printin
								elementAt
									i
									tagHandlerPoolNames
								out
							print
								StringLiteralExpr
								out
							IfStmt
								isTagFile
									ctxt
								BlockStmt
									print
										StringLiteralExpr
										out
								BlockStmt
									print
										StringLiteralExpr
										out
							println
								StringLiteralExpr
								out
						<
							i
							size
								tagHandlerPoolNames
						VariableDeclarator
							i
							PrimitiveType
						++
							i
			printin
				VAR_EXPRESSIONFACTORY
				out
			print
				StringLiteralExpr
				out
			IfStmt
				isTagFile
					ctxt
				BlockStmt
					print
						StringLiteralExpr
						out
				BlockStmt
					print
						StringLiteralExpr
						out
			println
				StringLiteralExpr
				out
			printin
				VAR_ANNOTATIONPROCESSOR
				out
			print
				StringLiteralExpr
				out
			IfStmt
				isTagFile
					ctxt
				BlockStmt
					print
						StringLiteralExpr
						out
				BlockStmt
					print
						StringLiteralExpr
						out
			println
				StringLiteralExpr
				out
			popIndent
				out
			printil
				StringLiteralExpr
				out
			println
				out
	MethodDeclaration
		BlockStmt
			printil
				StringLiteralExpr
				out
			pushIndent
				out
			IfStmt
				isPoolingEnabled
				BlockStmt
					ForStmt
						BlockStmt
							printin
								elementAt
									i
									tagHandlerPoolNames
								out
							println
								StringLiteralExpr
								out
						<
							i
							size
								tagHandlerPoolNames
						VariableDeclarator
							i
							PrimitiveType
						++
							i
			popIndent
				out
			printil
				StringLiteralExpr
				out
			println
				out
	MethodDeclaration
		BlockStmt
			IfStmt
				&&
					!
						equals
							packageName
							StringLiteralExpr
					!=
						packageName
						NullLiteralExpr
				BlockStmt
					printil
						+
							+
								StringLiteralExpr
								packageName
							StringLiteralExpr
						out
					println
						out
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				iterator
					getImports
						pageInfo
				iter
			WhileStmt
				BlockStmt
					printin
						StringLiteralExpr
						out
					print
						next
							iter
						out
					println
						StringLiteralExpr
						out
				hasNext
					iter
			println
				out
	MethodDeclaration
		BlockStmt
			printil
				StringLiteralExpr
				out
			println
				out
			printil
				StringLiteralExpr
				out
			println
				out
			VariableDeclarator
				getDependants
					pageInfo
				dependants
			VariableDeclarator
				iterator
					dependants
				iter
			IfStmt
				!
					isEmpty
						dependants
				BlockStmt
					printil
						StringLiteralExpr
						out
					pushIndent
						out
					printin
						StringLiteralExpr
						out
					print
						+
							StringLiteralExpr
							size
								dependants
						out
					println
						StringLiteralExpr
						out
					WhileStmt
						BlockStmt
							printin
								StringLiteralExpr
								out
							print
								next
									iter
								out
							println
								StringLiteralExpr
								out
						hasNext
							iter
					popIndent
						out
					printil
						StringLiteralExpr
						out
					println
						out
	MethodDeclaration
		BlockStmt
			IfStmt
				&&
					isPoolingEnabled
					!
						isEmpty
							tagHandlerPoolNames
				BlockStmt
					ForStmt
						BlockStmt
							printil
								+
									+
										StringLiteralExpr
										elementAt
											i
											tagHandlerPoolNames
									StringLiteralExpr
								out
						<
							i
							size
								tagHandlerPoolNames
						VariableDeclarator
							i
							PrimitiveType
						++
							i
					println
						out
			printin
				StringLiteralExpr
				out
			print
				VAR_EXPRESSIONFACTORY
				out
			println
				StringLiteralExpr
				out
			printin
				StringLiteralExpr
				out
			print
				VAR_ANNOTATIONPROCESSOR
				out
			println
				StringLiteralExpr
				out
			println
				out
	MethodDeclaration
		BlockStmt
			printil
				StringLiteralExpr
				out
			pushIndent
				out
			printil
				StringLiteralExpr
				out
			popIndent
				out
			printil
				StringLiteralExpr
				out
			println
				out
			generateInit
			generateDestroy
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				getServletPackageName
					ctxt
				servletPackageName
			VariableDeclarator
				getServletClassName
					ctxt
				servletClassName
			VariableDeclarator
				Constants
				serviceMethodName
			genPreamblePackage
				servletPackageName
			genPreambleImports
			printin
				StringLiteralExpr
				out
			print
				servletClassName
				out
			print
				StringLiteralExpr
				out
			println
				getExtends
					pageInfo
				out
			printin
				StringLiteralExpr
				out
			IfStmt
				!
					isThreadSafe
						pageInfo
				BlockStmt
					println
						StringLiteralExpr
						out
					printin
						StringLiteralExpr
						out
			println
				StringLiteralExpr
				out
			pushIndent
				out
			generateDeclarations
				page
			genPreambleStaticInitializers
			genPreambleClassVariableDeclarations
				servletClassName
			genPreambleMethods
			printin
				StringLiteralExpr
				out
			print
				serviceMethodName
				out
			println
				StringLiteralExpr
				out
			println
				StringLiteralExpr
				out
			pushIndent
				out
			println
				out
			printil
				StringLiteralExpr
				out
			IfStmt
				isSession
					pageInfo
				printil
					StringLiteralExpr
					out
			IfStmt
				isErrorPage
					pageInfo
				BlockStmt
					printil
						StringLiteralExpr
						out
					printil
						StringLiteralExpr
						out
					pushIndent
						out
					printil
						StringLiteralExpr
						out
					popIndent
						out
					printil
						StringLiteralExpr
						out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			println
				out
			declareTemporaryScriptingVars
				page
			println
				out
			printil
				StringLiteralExpr
				out
			pushIndent
				out
			printin
				StringLiteralExpr
				out
			print
				quote
					getContentType
						pageInfo
				out
			println
				StringLiteralExpr
				out
			IfStmt
				isXpoweredBy
					getOptions
						ctxt
				BlockStmt
					printil
						StringLiteralExpr
						out
			printil
				StringLiteralExpr
				out
			printin
				StringLiteralExpr
				out
			print
				quote
					getErrorPage
						pageInfo
				out
			print
				+
					StringLiteralExpr
					isSession
						pageInfo
				out
			print
				+
					StringLiteralExpr
					getBuffer
						pageInfo
				out
			print
				+
					StringLiteralExpr
					isAutoFlush
						pageInfo
				out
			println
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			IfStmt
				isSession
					pageInfo
				printil
					StringLiteralExpr
					out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			println
				out
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				getOmitXmlDecl
					pageInfo
				omitXmlDecl
			IfStmt
				||
					&&
						!=
							omitXmlDecl
							NullLiteralExpr
						!
							booleanValue
								omitXmlDecl
								JspUtil
					&&
						&&
							&&
								==
									omitXmlDecl
									NullLiteralExpr
								isXmlSyntax
									getRoot
										page
							!
								hasJspRoot
									pageInfo
						!
							isTagFile
								ctxt
				BlockStmt
					VariableDeclarator
						getContentType
							pageInfo
						cType
					VariableDeclarator
						substring
							+
								indexOf
									StringLiteralExpr
									cType
							cType
						charSet
					printil
						+
							+
								StringLiteralExpr
								charSet
							StringLiteralExpr
						out
			VariableDeclarator
				getDoctypeName
					pageInfo
				doctypeName
			IfStmt
				!=
					doctypeName
					NullLiteralExpr
				BlockStmt
					VariableDeclarator
						getDoctypePublic
							pageInfo
						doctypePublic
					VariableDeclarator
						getDoctypeSystem
							pageInfo
						doctypeSystem
					printin
						StringLiteralExpr
						out
					print
						doctypeName
						out
					IfStmt
						==
							doctypePublic
							NullLiteralExpr
						BlockStmt
							print
								StringLiteralExpr
								out
							print
								doctypePublic
								out
							print
								StringLiteralExpr
								out
						BlockStmt
							print
								StringLiteralExpr
								out
					print
						doctypeSystem
						out
					println
						StringLiteralExpr
						out
	MethodDeclaration
		BlockStmt
			printil
				+
					+
						StringLiteralExpr
						className
					StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			println
				out
	ClassOrInterfaceDeclaration
		FieldDeclaration
			VariableDeclarator
				handlerInfos
		FieldDeclaration
			VariableDeclarator
				tagVarNumbers
		FieldDeclaration
			VariableDeclarator
				parent
		FieldDeclaration
			VariableDeclarator
				isSimpleTagParent
				PrimitiveType
		FieldDeclaration
			VariableDeclarator
				pushBodyCountVar
		FieldDeclaration
			VariableDeclarator
				simpleTagHandlerVar
		FieldDeclaration
			VariableDeclarator
				isSimpleTagHandler
				PrimitiveType
		FieldDeclaration
			VariableDeclarator
				isFragment
				PrimitiveType
		FieldDeclaration
			VariableDeclarator
				isTagFile
				PrimitiveType
		FieldDeclaration
			VariableDeclarator
				out
		FieldDeclaration
			VariableDeclarator
				methodsBuffered
		FieldDeclaration
			VariableDeclarator
				fragmentHelperClass
		FieldDeclaration
			VariableDeclarator
				methodNesting
				PrimitiveType
		FieldDeclaration
			VariableDeclarator
				tagInfo
		FieldDeclaration
			VariableDeclarator
				loader
		FieldDeclaration
			VariableDeclarator
				charArrayCount
				PrimitiveType
		FieldDeclaration
			VariableDeclarator
				textMap
		ConstructorDeclaration
			BlockStmt
				isTagFile
				out
				methodsBuffered
				fragmentHelperClass
				loader
				tagInfo
				methodNesting
				handlerInfos
				tagVarNumbers
				textMap
			PrimitiveType
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getValue
						attr
					v
				IfStmt
					&&
						!
							isNamedAttribute
								attr
						==
							v
							NullLiteralExpr
					ReturnStmt
						StringLiteralExpr
				IfStmt
					isExpression
						attr
					IfStmt
						isELInterpreterInput
							attr
						IfStmt
							isNamedAttribute
								attr
							BlockStmt
								IfStmt
									encode
									BlockStmt
										ReturnStmt
											+
												+
													StringLiteralExpr
													quote
														v
												StringLiteralExpr
								ReturnStmt
									quote
										v
							BlockStmt
								ReturnStmt
									getTemporaryVariableName
										getNamedAttributeNode
											attr
						BlockStmt
							v
							interpreterCall
								v
								expectedType
								getMapName
									getEL
										attr
								isXml
								JspUtil
							IfStmt
								encode
								BlockStmt
									ReturnStmt
										+
											+
												StringLiteralExpr
												v
											StringLiteralExpr
							ReturnStmt
								v
					BlockStmt
						IfStmt
							encode
							BlockStmt
								ReturnStmt
									+
										+
											StringLiteralExpr
											v
										StringLiteralExpr
						ReturnStmt
							v
			PrimitiveType
			PrimitiveType
		MethodDeclaration
			BlockStmt
				ClassOrInterfaceDeclaration
					FieldDeclaration
						VariableDeclarator
							separator
					ConstructorDeclaration
						BlockStmt
							separator
					MethodDeclaration
						BlockStmt
							print
								StringLiteralExpr
								out
							print
								separator
								out
							print
								StringLiteralExpr
								out
							print
								+
									+
										+
											StringLiteralExpr
											StringLiteralExpr
										quote
											getTextAttribute
												StringLiteralExpr
												n
									StringLiteralExpr
								out
							print
								StringLiteralExpr
								out
							print
								attributeValue
									getValue
										n
									BooleanLiteralExpr
									ClassExpr
									isXmlSyntax
										getRoot
											n
								out
							separator
							StringLiteralExpr
				VariableDeclarator
					sep
				IfStmt
					literal
					BlockStmt
						sep
						+
							+
								StringLiteralExpr
								pageParam
							StringLiteralExpr
					BlockStmt
						sep
						>
							indexOf
								CharLiteralExpr
								pageParam
						StringLiteralExpr
						StringLiteralExpr
				IfStmt
					!=
						getBody
							n
						NullLiteralExpr
					BlockStmt
						visit
							sep
							getBody
								n
			PrimitiveType
		MethodDeclaration
			BlockStmt
				setBeginJavaLine
					getJavaLine
						out
					n
				printin
					StringLiteralExpr
					out
				printMultiLn
					getText
						n
					out
				println
					StringLiteralExpr
					out
				setEndJavaLine
					getJavaLine
						out
					n
		MethodDeclaration
			BlockStmt
				setBeginJavaLine
					getJavaLine
						out
					n
				printMultiLn
					getText
						n
					out
				println
					out
				setEndJavaLine
					getJavaLine
						out
					n
		MethodDeclaration
			BlockStmt
				setBeginJavaLine
					getJavaLine
						out
					n
				IfStmt
					&&
						!
							isELIgnored
								pageInfo
						!=
							getEL
								n
							NullLiteralExpr
					BlockStmt
						printil
							+
								+
									StringLiteralExpr
									quote
										+
											+
												+
													getType
														n
													StringLiteralExpr
												getText
													n
											StringLiteralExpr
								StringLiteralExpr
							out
					BlockStmt
						printil
							+
								+
									StringLiteralExpr
									interpreterCall
										+
											+
												+
													getType
														n
													StringLiteralExpr
												getText
													n
											StringLiteralExpr
										ClassExpr
										getMapName
											getEL
												n
										BooleanLiteralExpr
										JspUtil
								StringLiteralExpr
							out
				setEndJavaLine
					getJavaLine
						out
					n
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					flush
				VariableDeclarator
					getPage
						n
					page
				VariableDeclarator
					BooleanLiteralExpr
					isFlush
					PrimitiveType
				IfStmt
					equals
						flush
						StringLiteralExpr
					isFlush
					BooleanLiteralExpr
				setBeginJavaLine
					getJavaLine
						out
					n
				VariableDeclarator
					pageParam
				IfStmt
					isNamedAttribute
						page
					BlockStmt
						pageParam
						attributeValue
							page
							BooleanLiteralExpr
							ClassExpr
							isXmlSyntax
								getRoot
									n
					BlockStmt
						pageParam
						generateNamedAttributeValue
							getNamedAttributeNode
								page
				VariableDeclarator
					findJspBody
						n
					jspBody
				IfStmt
					!=
						jspBody
						NullLiteralExpr
					BlockStmt
						prepareParams
							n
					BlockStmt
						prepareParams
							jspBody
				printin
					+
						StringLiteralExpr
						pageParam
					out
				printParams
					n
					pageParam
					isLiteral
						page
				println
					+
						+
							StringLiteralExpr
							isFlush
						StringLiteralExpr
					out
				setEndJavaLine
					getJavaLine
						out
					n
		MethodDeclaration
			BlockStmt
				IfStmt
					==
						parent
						NullLiteralExpr
					ReturnStmt
				VariableDeclarator
					getBody
						parent
					subelements
				IfStmt
					!=
						subelements
						NullLiteralExpr
					BlockStmt
						ForStmt
							BlockStmt
								VariableDeclarator
									getNode
										i
										subelements
									n
								IfStmt
									n
									BlockStmt
										VariableDeclarator
											getBody
												n
											paramSubElements
										ForStmt
											BlockStmt
												VariableDeclarator
													getNode
														j
														paramSubElements
													m
												IfStmt
													m
													BlockStmt
														generateNamedAttributeValue
															m
											&&
												!=
													paramSubElements
													NullLiteralExpr
												<
													j
													size
														paramSubElements
											VariableDeclarator
												j
												PrimitiveType
											++
												j
							<
								i
								size
									subelements
							VariableDeclarator
								i
								PrimitiveType
							++
								i
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					NullLiteralExpr
					result
				VariableDeclarator
					getBody
						parent
					subelements
				ForStmt
					BlockStmt
						VariableDeclarator
							getNode
								i
								subelements
							n
						IfStmt
							n
							BlockStmt
								result
								n
								BreakStmt
					&&
						!=
							subelements
							NullLiteralExpr
						<
							i
							size
								subelements
					VariableDeclarator
						i
						PrimitiveType
					++
						i
				ReturnStmt
					result
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getPage
						n
					page
				setBeginJavaLine
					getJavaLine
						out
					n
				printil
					StringLiteralExpr
					out
				pushIndent
					out
				VariableDeclarator
					pageParam
				IfStmt
					isNamedAttribute
						page
					BlockStmt
						pageParam
						attributeValue
							page
							BooleanLiteralExpr
							ClassExpr
							isXmlSyntax
								getRoot
									n
					BlockStmt
						pageParam
						generateNamedAttributeValue
							getNamedAttributeNode
								page
				VariableDeclarator
					findJspBody
						n
					jspBody
				IfStmt
					!=
						jspBody
						NullLiteralExpr
					BlockStmt
						prepareParams
							n
					BlockStmt
						prepareParams
							jspBody
				printin
					StringLiteralExpr
					out
				print
					pageParam
					out
				printParams
					n
					pageParam
					isLiteral
						page
				println
					StringLiteralExpr
					out
				IfStmt
					||
						isTagFile
						isFragment
					BlockStmt
						printil
							>
								methodNesting
							StringLiteralExpr
							StringLiteralExpr
							out
					BlockStmt
						printil
							StringLiteralExpr
							out
				popIndent
					out
				printil
					StringLiteralExpr
					out
				setEndJavaLine
					getJavaLine
						out
					n
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					name
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					property
				setBeginJavaLine
					getJavaLine
						out
					n
				IfStmt
					checkVariable
						name
						beanInfo
					IfStmt
						||
							!
								STRICT_GET_PROPERTY
							contains
								name
								varInfoNames
						BlockStmt
							VariableDeclarator
								msg
							append
								StringLiteralExpr
								msg
							append
								getStart
									n
								msg
							append
								StringLiteralExpr
								msg
							append
								name
								msg
							append
								StringLiteralExpr
								msg
							ThrowStmt
								toString
									msg
						BlockStmt
							printil
								+
									+
										+
											+
												+
													+
														StringLiteralExpr
														StringLiteralExpr
													StringLiteralExpr
												name
											StringLiteralExpr
										property
									StringLiteralExpr
								out
					BlockStmt
						VariableDeclarator
							getBeanType
								name
								beanInfo
							bean
						VariableDeclarator
							getCanonicalName
								bean
								JspUtil
							beanName
						VariableDeclarator
							getReadMethod
								bean
								property
								JspRuntimeLibrary
							meth
						VariableDeclarator
							getName
								meth
							methodName
						printil
							+
								+
									+
										+
											+
												+
													+
														+
															StringLiteralExpr
															StringLiteralExpr
														beanName
													StringLiteralExpr
												StringLiteralExpr
											name
										StringLiteralExpr
									methodName
								StringLiteralExpr
							out
				setEndJavaLine
					getJavaLine
						out
					n
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					name
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					property
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					param
				VariableDeclarator
					getValue
						n
					value
				setBeginJavaLine
					getJavaLine
						out
					n
				IfStmt
					equals
						property
						StringLiteralExpr
					IfStmt
						==
							value
							NullLiteralExpr
						IfStmt
							isExpression
								value
							IfStmt
								isELInterpreterInput
									value
								IfStmt
									isNamedAttribute
										value
									BlockStmt
										printin
											+
												+
													+
														+
															+
																StringLiteralExpr
																StringLiteralExpr
															name
														StringLiteralExpr
													property
												StringLiteralExpr
											out
										print
											attributeValue
												value
												BooleanLiteralExpr
												NullLiteralExpr
												isXmlSyntax
													getRoot
														n
											out
										println
											StringLiteralExpr
											out
									BlockStmt
										VariableDeclarator
											generateNamedAttributeValue
												getNamedAttributeNode
													value
											valueVarName
										printil
											+
												+
													+
														+
															+
																+
																	+
																		StringLiteralExpr
																		StringLiteralExpr
																	name
																StringLiteralExpr
															property
														StringLiteralExpr
													valueVarName
												StringLiteralExpr
											out
								BlockStmt
									printil
										+
											+
												+
													+
														+
															+
																+
																	+
																		+
																			+
																				StringLiteralExpr
																				StringLiteralExpr
																			name
																		StringLiteralExpr
																	property
																StringLiteralExpr
															quote
																getValue
																	value
														StringLiteralExpr
													StringLiteralExpr
												getMapName
													getEL
														value
											StringLiteralExpr
										out
							BlockStmt
								printil
									+
										+
											+
												+
													+
														StringLiteralExpr
														StringLiteralExpr
													name
												StringLiteralExpr
											property
										StringLiteralExpr
									out
								print
									attributeValue
										value
										BooleanLiteralExpr
										NullLiteralExpr
										isXmlSyntax
											getRoot
												n
									out
								println
									StringLiteralExpr
									out
						BlockStmt
							IfStmt
								==
									param
									NullLiteralExpr
								param
								property
							printil
								+
									+
										+
											+
												+
													+
														+
															+
																+
																	+
																		StringLiteralExpr
																		StringLiteralExpr
																	name
																StringLiteralExpr
															property
														StringLiteralExpr
													param
												StringLiteralExpr
											StringLiteralExpr
										param
									StringLiteralExpr
								out
					BlockStmt
						printil
							+
								+
									+
										+
											StringLiteralExpr
											StringLiteralExpr
										StringLiteralExpr
									name
								StringLiteralExpr
							out
				setEndJavaLine
					getJavaLine
						out
					n
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					name
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					scope
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					klass
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					type
				VariableDeclarator
					getBeanName
						n
					beanName
				VariableDeclarator
					BooleanLiteralExpr
					generateNew
					PrimitiveType
				VariableDeclarator
					NullLiteralExpr
					canonicalName
				IfStmt
					!=
						klass
						NullLiteralExpr
					BlockStmt
						TryStmt
							CatchClause
								BlockStmt
									IfStmt
										getErrorOnUseBeanInvalidClassAttribute
											getOptions
												ctxt
										BlockStmt
											jspError
												n
												StringLiteralExpr
												klass
												err
									IfStmt
										==
											canonicalName
											NullLiteralExpr
										BlockStmt
											canonicalName
											replace
												CharLiteralExpr
												CharLiteralExpr
												klass
							BlockStmt
								VariableDeclarator
									loadClass
										klass
										getClassLoader
											ctxt
									bean
								IfStmt
									>=
										indexOf
											CharLiteralExpr
											klass
									BlockStmt
										canonicalName
										klass
									BlockStmt
										canonicalName
										getCanonicalName
											bean
											JspUtil
								VariableDeclarator
									getModifiers
										bean
									modifiers
									PrimitiveType
								IfStmt
									||
										||
											!
												isPublic
													modifiers
													Modifier
											isInterface
												modifiers
												Modifier
										isAbstract
											modifiers
											Modifier
									BlockStmt
										ThrowStmt
											StringLiteralExpr
								getConstructor
									ArrayInitializerExpr
									bean
								generateNew
								BooleanLiteralExpr
						IfStmt
							==
								type
								NullLiteralExpr
							BlockStmt
								type
								canonicalName
				VariableDeclarator
					StringLiteralExpr
					scopename
				VariableDeclarator
					StringLiteralExpr
					lock
				IfStmt
					equals
						scope
						StringLiteralExpr
					IfStmt
						equals
							scope
							StringLiteralExpr
						IfStmt
							equals
								scope
								StringLiteralExpr
							BlockStmt
								scopename
								StringLiteralExpr
								lock
								StringLiteralExpr
						BlockStmt
							scopename
							StringLiteralExpr
							lock
							StringLiteralExpr
					BlockStmt
						scopename
						StringLiteralExpr
						lock
						StringLiteralExpr
				setBeginJavaLine
					getJavaLine
						out
					n
				printin
					type
					out
				print
					CharLiteralExpr
					out
				print
					name
					out
				println
					StringLiteralExpr
					out
				printin
					StringLiteralExpr
					out
				print
					lock
					out
				println
					StringLiteralExpr
					out
				pushIndent
					out
				printin
					name
					out
				print
					StringLiteralExpr
					out
				print
					type
					out
				print
					StringLiteralExpr
					out
				print
					quote
						name
					out
				print
					StringLiteralExpr
					out
				print
					scopename
					out
				println
					StringLiteralExpr
					out
				printin
					StringLiteralExpr
					out
				print
					name
					out
				println
					StringLiteralExpr
					out
				pushIndent
					out
				IfStmt
					&&
						==
							klass
							NullLiteralExpr
						==
							beanName
							NullLiteralExpr
					BlockStmt
						IfStmt
							!
								generateNew
							BlockStmt
								printin
									name
									out
								print
									StringLiteralExpr
									out
								print
									canonicalName
									out
								println
									StringLiteralExpr
									out
							BlockStmt
								VariableDeclarator
									binaryName
								IfStmt
									!=
										beanName
										NullLiteralExpr
									BlockStmt
										binaryName
										quote
											klass
									BlockStmt
										IfStmt
											isNamedAttribute
												beanName
											BlockStmt
												binaryName
												attributeValue
													beanName
													BooleanLiteralExpr
													ClassExpr
													isXmlSyntax
														getRoot
															n
											BlockStmt
												binaryName
												generateNamedAttributeValue
													getNamedAttributeNode
														beanName
								printil
									StringLiteralExpr
									out
								pushIndent
									out
								printin
									name
									out
								print
									StringLiteralExpr
									out
								print
									type
									out
								print
									StringLiteralExpr
									out
								print
									StringLiteralExpr
									out
								print
									binaryName
									out
								println
									StringLiteralExpr
									out
								popIndent
									out
								printil
									StringLiteralExpr
									out
								pushIndent
									out
								printil
									StringLiteralExpr
									out
								popIndent
									out
								printil
									StringLiteralExpr
									out
								pushIndent
									out
								printin
									StringLiteralExpr
									out
								print
									StringLiteralExpr
									out
								print
									binaryName
									out
								println
									StringLiteralExpr
									out
								popIndent
									out
								printil
									StringLiteralExpr
									out
						printin
							StringLiteralExpr
							out
						print
							quote
								name
							out
						print
							StringLiteralExpr
							out
						print
							name
							out
						print
							StringLiteralExpr
							out
						print
							scopename
							out
						println
							StringLiteralExpr
							out
						visitBody
							n
					BlockStmt
						printin
							StringLiteralExpr
							out
						print
							name
							out
						println
							StringLiteralExpr
							out
				popIndent
					out
				printil
					StringLiteralExpr
					out
				popIndent
					out
				printil
					StringLiteralExpr
					out
				setEndJavaLine
					getJavaLine
						out
					n
		MethodDeclaration
			BlockStmt
				IfStmt
					==
						value
						NullLiteralExpr
					ReturnStmt
						StringLiteralExpr
				ReturnStmt
					+
						+
							+
								+
									StringLiteralExpr
									attr
								StringLiteralExpr
							value
						CharLiteralExpr
		MethodDeclaration
			BlockStmt
				ClassOrInterfaceDeclaration
					FieldDeclaration
						VariableDeclarator
							ie
							PrimitiveType
					ConstructorDeclaration
						BlockStmt
							ie
						PrimitiveType
					MethodDeclaration
						BlockStmt
							VariableDeclarator
								getTextAttribute
									StringLiteralExpr
									n
								name
							IfStmt
								equalsIgnoreCase
									StringLiteralExpr
									name
								IfStmt
									equalsIgnoreCase
										StringLiteralExpr
										name
									name
									StringLiteralExpr
								name
								StringLiteralExpr
							setBeginJavaLine
								getJavaLine
									out
								n
							IfStmt
								ie
								BlockStmt
									printil
										+
											+
												+
													+
														StringLiteralExpr
														escape
															name
													StringLiteralExpr
												attributeValue
													getValue
														n
													BooleanLiteralExpr
													ClassExpr
													isXmlSyntax
														getRoot
															n
											StringLiteralExpr
										out
								BlockStmt
									printil
										+
											+
												+
													+
														StringLiteralExpr
														escape
															name
													StringLiteralExpr
												attributeValue
													getValue
														n
													BooleanLiteralExpr
													ClassExpr
													isXmlSyntax
														getRoot
															n
											StringLiteralExpr
										out
									printil
										StringLiteralExpr
										out
							setEndJavaLine
								getJavaLine
									out
								n
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					type
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					code
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					name
				VariableDeclarator
					getHeight
						n
					height
				VariableDeclarator
					getWidth
						n
					width
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					hspace
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					vspace
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					align
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					iepluginurl
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					nspluginurl
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					codebase
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					archive
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					jreversion
				VariableDeclarator
					NullLiteralExpr
					widthStr
				IfStmt
					!=
						width
						NullLiteralExpr
					BlockStmt
						IfStmt
							isNamedAttribute
								width
							BlockStmt
								widthStr
								attributeValue
									width
									BooleanLiteralExpr
									ClassExpr
									isXmlSyntax
										getRoot
											n
							BlockStmt
								widthStr
								generateNamedAttributeValue
									getNamedAttributeNode
										width
				VariableDeclarator
					NullLiteralExpr
					heightStr
				IfStmt
					!=
						height
						NullLiteralExpr
					BlockStmt
						IfStmt
							isNamedAttribute
								height
							BlockStmt
								heightStr
								attributeValue
									height
									BooleanLiteralExpr
									ClassExpr
									isXmlSyntax
										getRoot
											n
							BlockStmt
								heightStr
								generateNamedAttributeValue
									getNamedAttributeNode
										height
				IfStmt
					==
						iepluginurl
						NullLiteralExpr
					iepluginurl
					Constants
				IfStmt
					==
						nspluginurl
						NullLiteralExpr
					nspluginurl
					Constants
				setBeginJavaLine
					getJavaLine
						out
					n
				VariableDeclarator
					findJspBody
						n
					jspBody
				IfStmt
					!=
						jspBody
						NullLiteralExpr
					BlockStmt
						VariableDeclarator
							getBody
								jspBody
							subelements
						IfStmt
							!=
								subelements
								NullLiteralExpr
							BlockStmt
								ForStmt
									BlockStmt
										VariableDeclarator
											getNode
												i
												subelements
											m
										IfStmt
											m
											BlockStmt
												prepareParams
													m
												BreakStmt
									<
										i
										size
											subelements
									VariableDeclarator
										i
										PrimitiveType
									++
										i
				VariableDeclarator
					+
						+
							StringLiteralExpr
							makeAttr
								StringLiteralExpr
								getIeClassId
									getOptions
										ctxt
						makeAttr
							StringLiteralExpr
							name
					s0
				VariableDeclarator
					StringLiteralExpr
					s1
				IfStmt
					!=
						width
						NullLiteralExpr
					BlockStmt
						s1
						+
							+
								StringLiteralExpr
								widthStr
							StringLiteralExpr
				VariableDeclarator
					StringLiteralExpr
					s2
				IfStmt
					!=
						height
						NullLiteralExpr
					BlockStmt
						s2
						+
							+
								StringLiteralExpr
								heightStr
							StringLiteralExpr
				VariableDeclarator
					+
						+
							+
								+
									makeAttr
										StringLiteralExpr
										hspace
									makeAttr
										StringLiteralExpr
										vspace
								makeAttr
									StringLiteralExpr
									align
							makeAttr
								StringLiteralExpr
								iepluginurl
						CharLiteralExpr
					s3
				printil
					+
						+
							+
								+
									+
										+
											StringLiteralExpr
											quote
												s0
										s1
									s2
								StringLiteralExpr
							quote
								s3
						StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				s0
				+
					+
						StringLiteralExpr
						makeAttr
							StringLiteralExpr
							code
					CharLiteralExpr
				printil
					+
						+
							StringLiteralExpr
							quote
								s0
						StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				IfStmt
					!=
						codebase
						NullLiteralExpr
					BlockStmt
						s0
						+
							+
								StringLiteralExpr
								makeAttr
									StringLiteralExpr
									codebase
							CharLiteralExpr
						printil
							+
								+
									StringLiteralExpr
									quote
										s0
								StringLiteralExpr
							out
						printil
							StringLiteralExpr
							out
				IfStmt
					!=
						archive
						NullLiteralExpr
					BlockStmt
						s0
						+
							+
								StringLiteralExpr
								makeAttr
									StringLiteralExpr
									archive
							CharLiteralExpr
						printil
							+
								+
									StringLiteralExpr
									quote
										s0
								StringLiteralExpr
							out
						printil
							StringLiteralExpr
							out
				s0
				+
					+
						StringLiteralExpr
						makeAttr
							StringLiteralExpr
							+
								+
									StringLiteralExpr
									type
								==
									jreversion
									NullLiteralExpr
								+
									StringLiteralExpr
									jreversion
								StringLiteralExpr
					CharLiteralExpr
				printil
					+
						+
							StringLiteralExpr
							quote
								s0
						StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				IfStmt
					!=
						getBody
							n
						NullLiteralExpr
					visit
						BooleanLiteralExpr
						getBody
							n
				printil
					+
						+
							StringLiteralExpr
							quote
								StringLiteralExpr
						StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				s0
				+
					+
						StringLiteralExpr
						makeAttr
							StringLiteralExpr
							+
								+
									StringLiteralExpr
									type
								==
									jreversion
									NullLiteralExpr
								+
									StringLiteralExpr
									jreversion
								StringLiteralExpr
					makeAttr
						StringLiteralExpr
						name
				s3
				+
					+
						+
							+
								+
									+
										makeAttr
											StringLiteralExpr
											hspace
										makeAttr
											StringLiteralExpr
											vspace
									makeAttr
										StringLiteralExpr
										align
								makeAttr
									StringLiteralExpr
									nspluginurl
							makeAttr
								StringLiteralExpr
								code
						makeAttr
							StringLiteralExpr
							codebase
					makeAttr
						StringLiteralExpr
						archive
				printil
					+
						+
							+
								+
									+
										+
											StringLiteralExpr
											quote
												s0
										s1
									s2
								StringLiteralExpr
							quote
								s3
						StringLiteralExpr
					out
				IfStmt
					!=
						getBody
							n
						NullLiteralExpr
					visit
						BooleanLiteralExpr
						getBody
							n
				printil
					+
						+
							StringLiteralExpr
							quote
								StringLiteralExpr
						StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				printil
					+
						+
							StringLiteralExpr
							quote
								StringLiteralExpr
						StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				IfStmt
					!=
						getBody
							n
						NullLiteralExpr
					BlockStmt
						visitBody
							n
						printil
							StringLiteralExpr
							out
				printil
					+
						+
							StringLiteralExpr
							quote
								StringLiteralExpr
						StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				printil
					+
						+
							StringLiteralExpr
							quote
								StringLiteralExpr
						StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				printil
					+
						+
							StringLiteralExpr
							quote
								StringLiteralExpr
						StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				setEndJavaLine
					getJavaLine
						out
					n
		MethodDeclaration
			BlockStmt
		MethodDeclaration
			BlockStmt
				IfStmt
					useTagPlugin
						n
					BlockStmt
						generateTagPlugin
							n
						ReturnStmt
				VariableDeclarator
					getTagHandlerInfo
						n
					handlerInfo
				VariableDeclarator
					createTagVarName
						getQName
							n
						getPrefix
							n
						getLocalName
							n
					baseVar
				VariableDeclarator
					+
						StringLiteralExpr
						baseVar
					tagEvalVar
				VariableDeclarator
					+
						StringLiteralExpr
						baseVar
					tagHandlerVar
				VariableDeclarator
					+
						StringLiteralExpr
						baseVar
					tagPushBodyCountVar
				VariableDeclarator
					NullLiteralExpr
					outSave
				VariableDeclarator
					getChildInfo
						n
					ci
				IfStmt
					&&
						isScriptless
							ci
						!
							hasScriptingVars
								ci
					BlockStmt
						VariableDeclarator
							+
								StringLiteralExpr
								baseVar
							tagMethod
						printin
							StringLiteralExpr
							out
						print
							tagMethod
							out
						print
							StringLiteralExpr
							out
						IfStmt
							!=
								parent
								NullLiteralExpr
							BlockStmt
								print
									parent
									out
								print
									StringLiteralExpr
									out
						print
							StringLiteralExpr
							out
						IfStmt
							!=
								pushBodyCountVar
								NullLiteralExpr
							BlockStmt
								print
									StringLiteralExpr
									out
								print
									pushBodyCountVar
									out
						println
							StringLiteralExpr
							out
						pushIndent
							out
						printil
							>
								methodNesting
							StringLiteralExpr
							StringLiteralExpr
							out
						popIndent
							out
						outSave
						out
						VariableDeclarator
							n
							implementsSimpleTag
								n
							getBody
								n
							NullLiteralExpr
							genBuffer
						add
							genBuffer
							methodsBuffered
						out
						getOut
							genBuffer
						++
							methodNesting
						println
							out
						pushIndent
							out
						printin
							StringLiteralExpr
							out
						print
							tagMethod
							out
						print
							StringLiteralExpr
							out
						IfStmt
							!=
								parent
								NullLiteralExpr
							BlockStmt
								print
									StringLiteralExpr
									out
								print
									parent
									out
								print
									StringLiteralExpr
									out
						print
							StringLiteralExpr
							out
						IfStmt
							!=
								pushBodyCountVar
								NullLiteralExpr
							BlockStmt
								print
									StringLiteralExpr
									out
								print
									pushBodyCountVar
									out
						println
							StringLiteralExpr
							out
						printil
							StringLiteralExpr
							out
						pushIndent
							out
						IfStmt
							!
								isTagFile
							BlockStmt
								printil
									StringLiteralExpr
									out
						printil
							StringLiteralExpr
							out
						generateLocalVariables
							out
							n
				VariableDeclarator
					getVariableInfos
						n
					infos
				IfStmt
					&&
						!=
							infos
							NullLiteralExpr
						>
							infos
					BlockStmt
						ForStmt
							BlockStmt
								VariableDeclarator
									i
									infos
									info
								IfStmt
									&&
										!=
											info
											NullLiteralExpr
										!=
											getVarName
												info
											NullLiteralExpr
									add
										getVarName
											info
										getVarInfoNames
											pageInfo
							<
								i
								infos
							VariableDeclarator
								i
								PrimitiveType
							++
								i
				VariableDeclarator
					getTagVariableInfos
						n
					tagInfos
				IfStmt
					&&
						!=
							tagInfos
							NullLiteralExpr
						>
							tagInfos
					BlockStmt
						ForStmt
							BlockStmt
								VariableDeclarator
									i
									tagInfos
									tagInfo
								IfStmt
									!=
										tagInfo
										NullLiteralExpr
									BlockStmt
										VariableDeclarator
											getNameGiven
												tagInfo
											name
										IfStmt
											==
												name
												NullLiteralExpr
											BlockStmt
												VariableDeclarator
													getNameFromAttribute
														tagInfo
													nameFromAttribute
												name
												getAttributeValue
													nameFromAttribute
													n
										add
											name
											getVarInfoNames
												pageInfo
							<
								i
								tagInfos
							VariableDeclarator
								i
								PrimitiveType
							++
								i
				IfStmt
					implementsSimpleTag
						n
					BlockStmt
						generateCustomStart
							n
							handlerInfo
							tagHandlerVar
							tagEvalVar
							tagPushBodyCountVar
						VariableDeclarator
							parent
							tmpParent
						parent
						tagHandlerVar
						VariableDeclarator
							isSimpleTagParent
							isSimpleTagParentSave
							PrimitiveType
						isSimpleTagParent
						BooleanLiteralExpr
						VariableDeclarator
							NullLiteralExpr
							tmpPushBodyCountVar
						IfStmt
							implementsTryCatchFinally
								n
							BlockStmt
								tmpPushBodyCountVar
								pushBodyCountVar
								pushBodyCountVar
								tagPushBodyCountVar
						VariableDeclarator
							isSimpleTagHandler
							tmpIsSimpleTagHandler
							PrimitiveType
						isSimpleTagHandler
						BooleanLiteralExpr
						visitBody
							n
						parent
						tmpParent
						isSimpleTagParent
						isSimpleTagParentSave
						IfStmt
							implementsTryCatchFinally
								n
							BlockStmt
								pushBodyCountVar
								tmpPushBodyCountVar
						isSimpleTagHandler
						tmpIsSimpleTagHandler
						generateCustomEnd
							n
							tagHandlerVar
							tagEvalVar
							tagPushBodyCountVar
					BlockStmt
						generateCustomDoTag
							n
							handlerInfo
							tagHandlerVar
				IfStmt
					&&
						isScriptless
							ci
						!
							hasScriptingVars
								ci
					BlockStmt
						IfStmt
							>
								methodNesting
							BlockStmt
								printil
									StringLiteralExpr
									out
						popIndent
							out
						printil
							StringLiteralExpr
							out
						popIndent
							out
						--
							methodNesting
						out
						outSave
		FieldDeclaration
			VariableDeclarator
				StringLiteralExpr
				SINGLE_QUOTE
		FieldDeclaration
			VariableDeclarator
				StringLiteralExpr
				DOUBLE_QUOTE
		MethodDeclaration
			BlockStmt
				setBeginJavaLine
					getJavaLine
						out
					n
				printin
					StringLiteralExpr
					out
				print
					getQName
						n
					out
				VariableDeclarator
					getNonTaglibXmlnsAttributes
						n
					attrs
				VariableDeclarator
					==
						attrs
						NullLiteralExpr
					getLength
						attrs
					attrsLen
					PrimitiveType
				ForStmt
					BlockStmt
						print
							StringLiteralExpr
							out
						print
							getQName
								i
								attrs
							out
						print
							StringLiteralExpr
							out
						print
							DOUBLE_QUOTE
							out
						print
							replace
								StringLiteralExpr
								StringLiteralExpr
								getValue
									i
									attrs
							out
						print
							DOUBLE_QUOTE
							out
					<
						i
						attrsLen
					VariableDeclarator
						i
						PrimitiveType
					++
						i
				attrs
				getAttributes
					n
				attrsLen
				==
					attrs
					NullLiteralExpr
				getLength
					attrs
				VariableDeclarator
					getJspAttributes
						n
					jspAttrs
				ForStmt
					BlockStmt
						print
							StringLiteralExpr
							out
						print
							getQName
								i
								attrs
							out
						print
							StringLiteralExpr
							out
						IfStmt
							isELInterpreterInput
								i
								jspAttrs
							BlockStmt
								print
									DOUBLE_QUOTE
									out
								print
									replace
										StringLiteralExpr
										StringLiteralExpr
										getValue
											i
											attrs
									out
								print
									DOUBLE_QUOTE
									out
							BlockStmt
								print
									StringLiteralExpr
									out
								print
									attributeValue
										i
										jspAttrs
										BooleanLiteralExpr
										ClassExpr
										isXmlSyntax
											getRoot
												n
									out
								print
									StringLiteralExpr
									out
					<
						i
						attrsLen
					VariableDeclarator
						i
						PrimitiveType
					++
						i
				IfStmt
					!=
						getBody
							n
						NullLiteralExpr
					BlockStmt
						println
							StringLiteralExpr
							out
					BlockStmt
						println
							StringLiteralExpr
							out
						visitBody
							n
						printin
							StringLiteralExpr
							out
						print
							getQName
								n
							out
						println
							StringLiteralExpr
							out
				setEndJavaLine
					getJavaLine
						out
					n
		MethodDeclaration
			BlockStmt
				setBeginJavaLine
					getJavaLine
						out
					n
				VariableDeclarator
					map
				VariableDeclarator
					getJspAttributes
						n
					attrs
				ForStmt
					BlockStmt
						VariableDeclarator
							NullLiteralExpr
							attrStr
						IfStmt
							isNamedAttribute
								i
								attrs
							BlockStmt
								attrStr
								attributeValue
									i
									attrs
									BooleanLiteralExpr
									ClassExpr
									isXmlSyntax
										getRoot
											n
							BlockStmt
								attrStr
								generateNamedAttributeValue
									getNamedAttributeNode
										i
										attrs
						VariableDeclarator
							+
								+
									+
										+
											StringLiteralExpr
											getName
												i
												attrs
										StringLiteralExpr
									attrStr
								StringLiteralExpr
							s
						put
							getName
								i
								attrs
							s
							map
					&&
						!=
							attrs
							NullLiteralExpr
						<
							i
							attrs
					VariableDeclarator
						i
						PrimitiveType
					++
						i
				VariableDeclarator
					attributeValue
						getNameAttribute
							n
						BooleanLiteralExpr
						ClassExpr
						isXmlSyntax
							getRoot
								n
					elemName
				printin
					StringLiteralExpr
					out
				print
					+
						StringLiteralExpr
						elemName
					out
				VariableDeclarator
					keys
						map
					enumeration
				WhileStmt
					BlockStmt
						VariableDeclarator
							nextElement
								enumeration
							attrName
						print
							get
								attrName
								map
							out
					hasMoreElements
						enumeration
				VariableDeclarator
					BooleanLiteralExpr
					hasBody
					PrimitiveType
				VariableDeclarator
					getBody
						n
					subelements
				IfStmt
					!=
						subelements
						NullLiteralExpr
					BlockStmt
						ForStmt
							BlockStmt
								VariableDeclarator
									getNode
										i
										subelements
									subelem
								IfStmt
									!
										subelem
									BlockStmt
										hasBody
										BooleanLiteralExpr
										BreakStmt
							<
								i
								size
									subelements
							VariableDeclarator
								i
								PrimitiveType
							++
								i
				IfStmt
					hasBody
					BlockStmt
						println
							StringLiteralExpr
							out
						setEndJavaLine
							getJavaLine
								out
							n
					BlockStmt
						println
							StringLiteralExpr
							out
						setEndJavaLine
							getJavaLine
								out
							n
						visitBody
							n
						printin
							StringLiteralExpr
							out
						print
							+
								StringLiteralExpr
								elemName
							out
						println
							StringLiteralExpr
							out
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getText
						n
					text
				VariableDeclarator
					length
						text
					textSize
					PrimitiveType
				IfStmt
					==
						textSize
					BlockStmt
						ReturnStmt
				IfStmt
					<=
						textSize
					BlockStmt
						setBeginJavaLine
							getJavaLine
								out
							n
						VariableDeclarator
							lineInc
							PrimitiveType
						ForStmt
							BlockStmt
								VariableDeclarator
									charAt
										i
										text
									ch
									PrimitiveType
								printil
									+
										+
											StringLiteralExpr
											quote
												ch
										StringLiteralExpr
									out
								IfStmt
									>
										i
									BlockStmt
										addSmap
											lineInc
											n
								IfStmt
									==
										ch
										CharLiteralExpr
									BlockStmt
										++
											lineInc
							<
								i
								textSize
							VariableDeclarator
								i
								PrimitiveType
							++
								i
						setEndJavaLine
							getJavaLine
								out
							n
						ReturnStmt
				IfStmt
					genStringAsCharArray
						getOptions
							ctxt
					BlockStmt
						VariableDeclarator
							caOut
						IfStmt
							==
								charArrayBuffer
								NullLiteralExpr
							BlockStmt
								caOut
								getOut
									charArrayBuffer
							BlockStmt
								charArrayBuffer
								caOut
								getOut
									charArrayBuffer
								pushIndent
									caOut
								textMap
						VariableDeclarator
							textIndex
							PrimitiveType
						VariableDeclarator
							length
								text
							textLength
							PrimitiveType
						WhileStmt
							BlockStmt
								VariableDeclarator
									len
									PrimitiveType
								IfStmt
									>
										-
											textLength
											textIndex
									BlockStmt
										len
										-
											textLength
											textIndex
									BlockStmt
										len
								VariableDeclarator
									substring
										textIndex
										+
											textIndex
											len
										text
									output
								VariableDeclarator
									get
										output
										textMap
									charArrayName
								IfStmt
									==
										charArrayName
										NullLiteralExpr
									BlockStmt
										charArrayName
										+
											StringLiteralExpr
											++
												charArrayCount
										put
											output
											charArrayName
											textMap
										printin
											StringLiteralExpr
											caOut
										print
											charArrayName
											caOut
										print
											StringLiteralExpr
											caOut
										print
											quote
												output
											caOut
										println
											StringLiteralExpr
											caOut
								setBeginJavaLine
									getJavaLine
										out
									n
								printil
									+
										+
											StringLiteralExpr
											charArrayName
										StringLiteralExpr
									out
								setEndJavaLine
									getJavaLine
										out
									n
								textIndex
								+
									textIndex
									len
							<
								textIndex
								textLength
						ReturnStmt
				setBeginJavaLine
					getJavaLine
						out
					n
				printin
					out
				VariableDeclarator
					StringLiteralExpr
					sb
				VariableDeclarator
					length
						sb
					initLength
					PrimitiveType
				VariableDeclarator
					JspUtil
					count
					PrimitiveType
				VariableDeclarator
					srcLine
					PrimitiveType
				ForStmt
					BlockStmt
						VariableDeclarator
							charAt
								i
								text
							ch
							PrimitiveType
						--
							count
						SwitchStmt
							SwitchEntryStmt
								CharLiteralExpr
								append
									CharLiteralExpr
									append
										CharLiteralExpr
										sb
								BreakStmt
							SwitchEntryStmt
								CharLiteralExpr
								append
									CharLiteralExpr
									append
										CharLiteralExpr
										sb
								BreakStmt
							SwitchEntryStmt
								CharLiteralExpr
								append
									CharLiteralExpr
									append
										CharLiteralExpr
										sb
								BreakStmt
							SwitchEntryStmt
								CharLiteralExpr
								append
									CharLiteralExpr
									append
										CharLiteralExpr
										sb
								++
									srcLine
								IfStmt
									||
										breakAtLF
										<
											count
									BlockStmt
										append
											StringLiteralExpr
											sb
										println
											toString
												sb
											out
										IfStmt
											<
												i
												-
													length
														text
											BlockStmt
												printin
													out
										setLength
											initLength
											sb
										count
										JspUtil
								addSmap
									srcLine
									n
								BreakStmt
							SwitchEntryStmt
								CharLiteralExpr
								append
									CharLiteralExpr
									append
										CharLiteralExpr
										sb
								BreakStmt
							SwitchEntryStmt
								append
									ch
									sb
							ch
					<
						i
						length
							text
					VariableDeclarator
						i
						PrimitiveType
					++
						i
				IfStmt
					>
						length
							sb
						initLength
					BlockStmt
						append
							StringLiteralExpr
							sb
						println
							toString
								sb
							out
				setEndJavaLine
					getJavaLine
						out
					n
		MethodDeclaration
			BlockStmt
				IfStmt
					!=
						getBody
							n
						NullLiteralExpr
					BlockStmt
						IfStmt
							isSimpleTagHandler
							BlockStmt
								visitBody
									n
							BlockStmt
								printin
									simpleTagHandlerVar
									out
								print
									StringLiteralExpr
									out
								generateJspFragment
									n
									simpleTagHandlerVar
								println
									StringLiteralExpr
									out
		MethodDeclaration
			BlockStmt
				setBeginJavaLine
					getJavaLine
						out
					n
				printil
					StringLiteralExpr
					out
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					varReaderAttr
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					varAttr
				IfStmt
					||
						!=
							varReaderAttr
							NullLiteralExpr
						!=
							varAttr
							NullLiteralExpr
					BlockStmt
						printil
							StringLiteralExpr
							out
					BlockStmt
						printil
							StringLiteralExpr
							out
				printin
					StringLiteralExpr
					out
				print
					toGetterMethod
						getTextAttribute
							StringLiteralExpr
							n
					out
				println
					StringLiteralExpr
					out
				pushIndent
					out
				printin
					toGetterMethod
						getTextAttribute
							StringLiteralExpr
							n
					out
				println
					StringLiteralExpr
					out
				popIndent
					out
				printil
					StringLiteralExpr
					out
				IfStmt
					||
						!=
							varReaderAttr
							NullLiteralExpr
						!=
							varAttr
							NullLiteralExpr
					BlockStmt
						VariableDeclarator
							getTextAttribute
								StringLiteralExpr
								n
							scopeName
						printin
							StringLiteralExpr
							out
						IfStmt
							!=
								varReaderAttr
								NullLiteralExpr
							BlockStmt
								print
									quote
										varAttr
									out
								print
									StringLiteralExpr
									out
							BlockStmt
								print
									quote
										varReaderAttr
									out
								print
									StringLiteralExpr
									out
						IfStmt
							!=
								scopeName
								NullLiteralExpr
							BlockStmt
								print
									StringLiteralExpr
									out
								print
									getScopeConstant
										scopeName
									out
						println
							StringLiteralExpr
							out
				printil
					StringLiteralExpr
					out
				setEndJavaLine
					getJavaLine
						out
					n
		MethodDeclaration
			BlockStmt
				setBeginJavaLine
					getJavaLine
						out
					n
				printil
					StringLiteralExpr
					out
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					varReaderAttr
				VariableDeclarator
					getTextAttribute
						StringLiteralExpr
						n
					varAttr
				IfStmt
					||
						!=
							varReaderAttr
							NullLiteralExpr
						!=
							varAttr
							NullLiteralExpr
					BlockStmt
						printil
							StringLiteralExpr
							out
					BlockStmt
						printil
							StringLiteralExpr
							out
				printil
					StringLiteralExpr
					out
				pushIndent
					out
				printil
					StringLiteralExpr
					out
				popIndent
					out
				IfStmt
					||
						!=
							varReaderAttr
							NullLiteralExpr
						!=
							varAttr
							NullLiteralExpr
					BlockStmt
						VariableDeclarator
							getTextAttribute
								StringLiteralExpr
								n
							scopeName
						printin
							StringLiteralExpr
							out
						IfStmt
							!=
								varReaderAttr
								NullLiteralExpr
							BlockStmt
								print
									quote
										varAttr
									out
								print
									StringLiteralExpr
									out
							BlockStmt
								print
									quote
										varReaderAttr
									out
								print
									StringLiteralExpr
									out
						IfStmt
							!=
								scopeName
								NullLiteralExpr
							BlockStmt
								print
									StringLiteralExpr
									out
								print
									getScopeConstant
										scopeName
									out
						println
							StringLiteralExpr
							out
				printil
					StringLiteralExpr
					out
				setEndJavaLine
					getJavaLine
						out
					n
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getTag
						n
					tag
				VariableDeclarator
					getJspAttributes
						tag
					attrs
				ForStmt
					BlockStmt
						IfStmt
							equals
								getName
									n
								getName
									i
									attrs
							BlockStmt
								print
									evaluateAttribute
										getTagHandlerInfo
											tag
										i
										attrs
										tag
										NullLiteralExpr
									out
								BreakStmt
					&&
						!=
							attrs
							NullLiteralExpr
						<
							i
							attrs
					VariableDeclarator
						i
						PrimitiveType
					++
						i
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					get
						getPrefix
							n
						handlerInfos
					handlerInfosByShortName
				IfStmt
					==
						handlerInfosByShortName
						NullLiteralExpr
					BlockStmt
						handlerInfosByShortName
						put
							getPrefix
								n
							handlerInfosByShortName
							handlerInfos
				VariableDeclarator
					get
						getLocalName
							n
						handlerInfosByShortName
					handlerInfo
				IfStmt
					==
						handlerInfo
						NullLiteralExpr
					BlockStmt
						handlerInfo
						n
						getTagHandlerClass
							n
						err
						put
							getLocalName
								n
							handlerInfo
							handlerInfosByShortName
				ReturnStmt
					handlerInfo
		MethodDeclaration
			BlockStmt
				IfStmt
					!=
						getAtSTag
							n
						NullLiteralExpr
					BlockStmt
						visit
							getAtSTag
								n
				visitBody
					n
				IfStmt
					!=
						getAtETag
							n
						NullLiteralExpr
					BlockStmt
						visit
							getAtETag
								n
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getTagHandlerClass
						handlerInfo
					tagHandlerClass
				printin
					StringLiteralExpr
					out
				println
					getQName
						n
					out
				setBeginJavaLine
					getJavaLine
						out
					n
				declareScriptingVars
					n
					VariableInfo
				saveScriptingVars
					n
					VariableInfo
				VariableDeclarator
					getCanonicalName
						tagHandlerClass
						JspUtil
					tagHandlerClassName
				printin
					tagHandlerClassName
					out
				print
					StringLiteralExpr
					out
				print
					tagHandlerVar
					out
				print
					StringLiteralExpr
					out
				IfStmt
					&&
						isPoolingEnabled
						!
							implementsJspIdConsumer
								n
					BlockStmt
						print
							StringLiteralExpr
							out
						print
							tagHandlerClassName
							out
						println
							StringLiteralExpr
							out
						printin
							StringLiteralExpr
							out
						print
							VAR_ANNOTATIONPROCESSOR
							out
						print
							StringLiteralExpr
							out
						print
							tagHandlerVar
							out
						println
							StringLiteralExpr
							out
					BlockStmt
						print
							StringLiteralExpr
							out
						print
							tagHandlerClassName
							out
						print
							StringLiteralExpr
							out
						print
							getTagHandlerPoolName
								n
							out
						print
							StringLiteralExpr
							out
						print
							tagHandlerClassName
							out
						println
							StringLiteralExpr
							out
				generateSetters
					n
					tagHandlerVar
					handlerInfo
					BooleanLiteralExpr
				IfStmt
					implementsJspIdConsumer
						n
					BlockStmt
						printin
							tagHandlerVar
							out
						print
							StringLiteralExpr
							out
						print
							createJspId
							out
						println
							StringLiteralExpr
							out
				IfStmt
					implementsTryCatchFinally
						n
					BlockStmt
						printin
							StringLiteralExpr
							out
						print
							tagPushBodyCountVar
							out
						println
							StringLiteralExpr
							out
						printil
							StringLiteralExpr
							out
						pushIndent
							out
				printin
					StringLiteralExpr
					out
				print
					tagEvalVar
					out
				print
					StringLiteralExpr
					out
				print
					tagHandlerVar
					out
				println
					StringLiteralExpr
					out
				IfStmt
					!
						implementsBodyTag
							n
					BlockStmt
						syncScriptingVars
							n
							VariableInfo
				IfStmt
					!
						hasEmptyBody
							n
					BlockStmt
						printin
							StringLiteralExpr
							out
						print
							tagEvalVar
							out
						println
							StringLiteralExpr
							out
						pushIndent
							out
						declareScriptingVars
							n
							VariableInfo
						saveScriptingVars
							n
							VariableInfo
						IfStmt
							implementsBodyTag
								n
							BlockStmt
								syncScriptingVars
									n
									VariableInfo
							BlockStmt
								printin
									StringLiteralExpr
									out
								print
									tagEvalVar
									out
								println
									StringLiteralExpr
									out
								pushIndent
									out
								printil
									StringLiteralExpr
									out
								IfStmt
									implementsTryCatchFinally
										n
									IfStmt
										!=
											pushBodyCountVar
											NullLiteralExpr
										BlockStmt
											printin
												pushBodyCountVar
												out
											println
												StringLiteralExpr
												out
									BlockStmt
										printin
											tagPushBodyCountVar
											out
										println
											StringLiteralExpr
											out
								printin
									tagHandlerVar
									out
								println
									StringLiteralExpr
									out
								printin
									tagHandlerVar
									out
								println
									StringLiteralExpr
									out
								popIndent
									out
								printil
									StringLiteralExpr
									out
								syncScriptingVars
									n
									VariableInfo
								syncScriptingVars
									n
									VariableInfo
						IfStmt
							implementsIterationTag
								n
							BlockStmt
								printil
									StringLiteralExpr
									out
								pushIndent
									out
				setEndJavaLine
					getJavaLine
						out
					n
		MethodDeclaration
			BlockStmt
				IfStmt
					!
						hasEmptyBody
							n
					BlockStmt
						IfStmt
							implementsIterationTag
								n
							BlockStmt
								printin
									StringLiteralExpr
									out
								print
									tagHandlerVar
									out
								println
									StringLiteralExpr
									out
								syncScriptingVars
									n
									VariableInfo
								syncScriptingVars
									n
									VariableInfo
								printil
									StringLiteralExpr
									out
								pushIndent
									out
								printil
									StringLiteralExpr
									out
								popIndent
									out
								popIndent
									out
								printil
									StringLiteralExpr
									out
						restoreScriptingVars
							n
							VariableInfo
						IfStmt
							implementsBodyTag
								n
							BlockStmt
								printin
									StringLiteralExpr
									out
								print
									tagEvalVar
									out
								println
									StringLiteralExpr
									out
								pushIndent
									out
								printil
									StringLiteralExpr
									out
								IfStmt
									implementsTryCatchFinally
										n
									IfStmt
										!=
											pushBodyCountVar
											NullLiteralExpr
										BlockStmt
											printin
												pushBodyCountVar
												out
											println
												StringLiteralExpr
												out
									BlockStmt
										printin
											tagPushBodyCountVar
											out
										println
											StringLiteralExpr
											out
								popIndent
									out
								printil
									StringLiteralExpr
									out
						popIndent
							out
						printil
							StringLiteralExpr
							out
				printin
					StringLiteralExpr
					out
				print
					tagHandlerVar
					out
				println
					StringLiteralExpr
					out
				pushIndent
					out
				IfStmt
					!
						implementsTryCatchFinally
							n
					BlockStmt
						IfStmt
							&&
								isPoolingEnabled
								!
									implementsJspIdConsumer
										n
							BlockStmt
								printin
									tagHandlerVar
									out
								println
									StringLiteralExpr
									out
								printin
									StringLiteralExpr
									out
								print
									VAR_ANNOTATIONPROCESSOR
									out
								print
									StringLiteralExpr
									out
								print
									tagHandlerVar
									out
								println
									StringLiteralExpr
									out
							BlockStmt
								printin
									getTagHandlerPoolName
										n
									out
								print
									StringLiteralExpr
									out
								print
									tagHandlerVar
									out
								println
									StringLiteralExpr
									out
				IfStmt
					||
						isTagFile
						isFragment
					BlockStmt
						printil
							>
								methodNesting
							StringLiteralExpr
							StringLiteralExpr
							out
					BlockStmt
						printil
							StringLiteralExpr
							out
				popIndent
					out
				printil
					StringLiteralExpr
					out
				syncScriptingVars
					n
					VariableInfo
				IfStmt
					implementsTryCatchFinally
						n
					BlockStmt
						popIndent
							out
						printil
							StringLiteralExpr
							out
						pushIndent
							out
						printin
							StringLiteralExpr
							out
						print
							tagPushBodyCountVar
							out
						println
							StringLiteralExpr
							out
						pushIndent
							out
						printil
							StringLiteralExpr
							out
						popIndent
							out
						printin
							tagHandlerVar
							out
						println
							StringLiteralExpr
							out
						popIndent
							out
						printil
							StringLiteralExpr
							out
						pushIndent
							out
						printin
							tagHandlerVar
							out
						println
							StringLiteralExpr
							out
				IfStmt
					&&
						isPoolingEnabled
						!
							implementsJspIdConsumer
								n
					BlockStmt
						printin
							tagHandlerVar
							out
						println
							StringLiteralExpr
							out
						printin
							StringLiteralExpr
							out
						print
							VAR_ANNOTATIONPROCESSOR
							out
						print
							StringLiteralExpr
							out
						print
							tagHandlerVar
							out
						println
							StringLiteralExpr
							out
					BlockStmt
						printin
							getTagHandlerPoolName
								n
							out
						print
							StringLiteralExpr
							out
						print
							tagHandlerVar
							out
						println
							StringLiteralExpr
							out
				IfStmt
					implementsTryCatchFinally
						n
					BlockStmt
						popIndent
							out
						printil
							StringLiteralExpr
							out
				declareScriptingVars
					n
					VariableInfo
				syncScriptingVars
					n
					VariableInfo
				restoreScriptingVars
					n
					VariableInfo
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getTagHandlerClass
						handlerInfo
					tagHandlerClass
				setBeginJavaLine
					getJavaLine
						out
					n
				printin
					StringLiteralExpr
					out
				println
					getQName
						n
					out
				declareScriptingVars
					n
					VariableInfo
				saveScriptingVars
					n
					VariableInfo
				VariableDeclarator
					getCanonicalName
						tagHandlerClass
						JspUtil
					tagHandlerClassName
				printin
					tagHandlerClassName
					out
				print
					StringLiteralExpr
					out
				print
					tagHandlerVar
					out
				print
					StringLiteralExpr
					out
				print
					StringLiteralExpr
					out
				print
					tagHandlerClassName
					out
				println
					StringLiteralExpr
					out
				printin
					StringLiteralExpr
					out
				print
					VAR_ANNOTATIONPROCESSOR
					out
				print
					StringLiteralExpr
					out
				print
					tagHandlerVar
					out
				println
					StringLiteralExpr
					out
				generateSetters
					n
					tagHandlerVar
					handlerInfo
					BooleanLiteralExpr
				IfStmt
					implementsJspIdConsumer
						n
					BlockStmt
						printin
							tagHandlerVar
							out
						print
							StringLiteralExpr
							out
						print
							createJspId
							out
						println
							StringLiteralExpr
							out
				IfStmt
					==
						findJspBody
							n
						NullLiteralExpr
					BlockStmt
						VariableDeclarator
							simpleTagHandlerVar
							tmpTagHandlerVar
						simpleTagHandlerVar
						tagHandlerVar
						VariableDeclarator
							isSimpleTagHandler
							tmpIsSimpleTagHandler
							PrimitiveType
						isSimpleTagHandler
						BooleanLiteralExpr
						visitBody
							n
						simpleTagHandlerVar
						tmpTagHandlerVar
						isSimpleTagHandler
						tmpIsSimpleTagHandler
					BlockStmt
						IfStmt
							!
								hasEmptyBody
									n
							BlockStmt
								printin
									tagHandlerVar
									out
								print
									StringLiteralExpr
									out
								generateJspFragment
									n
									tagHandlerVar
								println
									StringLiteralExpr
									out
				printin
					tagHandlerVar
					out
				println
					StringLiteralExpr
					out
				restoreScriptingVars
					n
					VariableInfo
				syncScriptingVars
					n
					VariableInfo
				declareScriptingVars
					n
					VariableInfo
				syncScriptingVars
					n
					VariableInfo
				printin
					StringLiteralExpr
					out
				print
					VAR_ANNOTATIONPROCESSOR
					out
				print
					StringLiteralExpr
					out
				print
					tagHandlerVar
					out
				println
					StringLiteralExpr
					out
				setEndJavaLine
					getJavaLine
						out
					n
		MethodDeclaration
			BlockStmt
				IfStmt
					isFragment
					BlockStmt
						ReturnStmt
				VariableDeclarator
					getScriptingVars
						scope
						n
					vec
				IfStmt
					!=
						vec
						NullLiteralExpr
					BlockStmt
						ForStmt
							BlockStmt
								VariableDeclarator
									elementAt
										i
										vec
									elem
								IfStmt
									elem
									BlockStmt
										VariableDeclarator
											elem
											tagVarInfo
										IfStmt
											getDeclare
												tagVarInfo
											BlockStmt
												VariableDeclarator
													getNameGiven
														tagVarInfo
													varName
												IfStmt
													==
														varName
														NullLiteralExpr
													IfStmt
														!=
															getNameFromAttribute
																tagVarInfo
															NullLiteralExpr
														BlockStmt
															ContinueStmt
													BlockStmt
														varName
														getAttributeString
															getNameFromAttribute
																tagVarInfo
															getTagData
																n
												printin
													getClassName
														tagVarInfo
													out
												print
													StringLiteralExpr
													out
												print
													varName
													out
												println
													StringLiteralExpr
													out
									BlockStmt
										VariableDeclarator
											elem
											varInfo
										IfStmt
											getDeclare
												varInfo
											BlockStmt
												printin
													getClassName
														varInfo
													out
												print
													StringLiteralExpr
													out
												print
													getVarName
														varInfo
													out
												println
													StringLiteralExpr
													out
							<
								i
								size
									vec
							VariableDeclarator
								i
								PrimitiveType
							++
								i
			PrimitiveType
		MethodDeclaration
			BlockStmt
				IfStmt
					==
						getCustomNestingLevel
							n
					BlockStmt
						ReturnStmt
				IfStmt
					isFragment
					BlockStmt
						ReturnStmt
				VariableDeclarator
					getTagVariableInfos
						n
					tagVarInfos
				VariableDeclarator
					getVariableInfos
						n
					varInfos
				IfStmt
					&&
						==
							varInfos
						==
							tagVarInfos
					BlockStmt
						ReturnStmt
				IfStmt
					>
						varInfos
					BlockStmt
						ForStmt
							BlockStmt
								IfStmt
									!=
										getScope
											i
											tagVarInfos
										scope
									ContinueStmt
								IfStmt
									contains
										i
										tagVarInfos
										getScriptingVars
											scope
											n
									ContinueStmt
								VariableDeclarator
									getNameGiven
										i
										tagVarInfos
									varName
								IfStmt
									==
										varName
										NullLiteralExpr
									IfStmt
										!=
											getNameFromAttribute
												i
												tagVarInfos
											NullLiteralExpr
										BlockStmt
											ContinueStmt
									BlockStmt
										varName
										getAttributeString
											getNameFromAttribute
												i
												tagVarInfos
											getTagData
												n
								VariableDeclarator
									+
										+
											+
												StringLiteralExpr
												varName
											StringLiteralExpr
										getCustomNestingLevel
											n
									tmpVarName
								printin
									tmpVarName
									out
								print
									StringLiteralExpr
									out
								print
									varName
									out
								println
									StringLiteralExpr
									out
							<
								i
								tagVarInfos
							VariableDeclarator
								i
								PrimitiveType
							++
								i
					BlockStmt
						ForStmt
							BlockStmt
								IfStmt
									!=
										getScope
											i
											varInfos
										scope
									ContinueStmt
								IfStmt
									contains
										i
										varInfos
										getScriptingVars
											scope
											n
									ContinueStmt
								VariableDeclarator
									getVarName
										i
										varInfos
									varName
								VariableDeclarator
									+
										+
											+
												StringLiteralExpr
												varName
											StringLiteralExpr
										getCustomNestingLevel
											n
									tmpVarName
								printin
									tmpVarName
									out
								print
									StringLiteralExpr
									out
								print
									varName
									out
								println
									StringLiteralExpr
									out
							<
								i
								varInfos
							VariableDeclarator
								i
								PrimitiveType
							++
								i
			PrimitiveType
		MethodDeclaration
			BlockStmt
				IfStmt
					==
						getCustomNestingLevel
							n
					BlockStmt
						ReturnStmt
				IfStmt
					isFragment
					BlockStmt
						ReturnStmt
				VariableDeclarator
					getTagVariableInfos
						n
					tagVarInfos
				VariableDeclarator
					getVariableInfos
						n
					varInfos
				IfStmt
					&&
						==
							varInfos
						==
							tagVarInfos
					BlockStmt
						ReturnStmt
				IfStmt
					>
						varInfos
					BlockStmt
						ForStmt
							BlockStmt
								IfStmt
									!=
										getScope
											i
											tagVarInfos
										scope
									ContinueStmt
								IfStmt
									contains
										i
										tagVarInfos
										getScriptingVars
											scope
											n
									ContinueStmt
								VariableDeclarator
									getNameGiven
										i
										tagVarInfos
									varName
								IfStmt
									==
										varName
										NullLiteralExpr
									IfStmt
										!=
											getNameFromAttribute
												i
												tagVarInfos
											NullLiteralExpr
										BlockStmt
											ContinueStmt
									BlockStmt
										varName
										getAttributeString
											getNameFromAttribute
												i
												tagVarInfos
											getTagData
												n
								VariableDeclarator
									+
										+
											+
												StringLiteralExpr
												varName
											StringLiteralExpr
										getCustomNestingLevel
											n
									tmpVarName
								printin
									varName
									out
								print
									StringLiteralExpr
									out
								print
									tmpVarName
									out
								println
									StringLiteralExpr
									out
							<
								i
								tagVarInfos
							VariableDeclarator
								i
								PrimitiveType
							++
								i
					BlockStmt
						ForStmt
							BlockStmt
								IfStmt
									!=
										getScope
											i
											varInfos
										scope
									ContinueStmt
								IfStmt
									contains
										i
										varInfos
										getScriptingVars
											scope
											n
									ContinueStmt
								VariableDeclarator
									getVarName
										i
										varInfos
									varName
								VariableDeclarator
									+
										+
											+
												StringLiteralExpr
												varName
											StringLiteralExpr
										getCustomNestingLevel
											n
									tmpVarName
								printin
									varName
									out
								print
									StringLiteralExpr
									out
								print
									tmpVarName
									out
								println
									StringLiteralExpr
									out
							<
								i
								varInfos
							VariableDeclarator
								i
								PrimitiveType
							++
								i
			PrimitiveType
		MethodDeclaration
			BlockStmt
				IfStmt
					isFragment
					BlockStmt
						ReturnStmt
				VariableDeclarator
					getTagVariableInfos
						n
					tagVarInfos
				VariableDeclarator
					getVariableInfos
						n
					varInfos
				IfStmt
					&&
						==
							varInfos
						==
							tagVarInfos
					BlockStmt
						ReturnStmt
				IfStmt
					>
						varInfos
					BlockStmt
						ForStmt
							BlockStmt
								IfStmt
									==
										getScope
											i
											tagVarInfos
										scope
									BlockStmt
										VariableDeclarator
											getNameGiven
												i
												tagVarInfos
											name
										IfStmt
											==
												name
												NullLiteralExpr
											IfStmt
												!=
													getNameFromAttribute
														i
														tagVarInfos
													NullLiteralExpr
												BlockStmt
													ContinueStmt
											BlockStmt
												name
												getAttributeString
													getNameFromAttribute
														i
														tagVarInfos
													getTagData
														n
										printin
											name
											out
										print
											StringLiteralExpr
											out
										print
											getClassName
												i
												tagVarInfos
											out
										print
											StringLiteralExpr
											out
										print
											quote
												name
											out
										println
											StringLiteralExpr
											out
							<
								i
								tagVarInfos
							VariableDeclarator
								i
								PrimitiveType
							++
								i
					BlockStmt
						ForStmt
							BlockStmt
								IfStmt
									==
										getScope
											i
											varInfos
										scope
									BlockStmt
										printin
											getVarName
												i
												varInfos
											out
										print
											StringLiteralExpr
											out
										print
											getClassName
												i
												varInfos
											out
										print
											StringLiteralExpr
											out
										print
											quote
												getVarName
													i
													varInfos
											out
										println
											StringLiteralExpr
											out
							<
								i
								varInfos
							VariableDeclarator
								i
								PrimitiveType
							++
								i
			PrimitiveType
		MethodDeclaration
			BlockStmt
				IfStmt
					BlockStmt
						ReturnStmt
							StringLiteralExpr
					BlockStmt
						ReturnStmt
							StringLiteralExpr
		MethodDeclaration
			BlockStmt
				ReturnStmt
					VAR_EXPRESSIONFACTORY
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					varName
				SynchronizedStmt
					BlockStmt
						varName
						+
							+
								+
									prefix
									StringLiteralExpr
								shortName
							StringLiteralExpr
						IfStmt
							!=
								get
									fullName
									tagVarNumbers
								NullLiteralExpr
							BlockStmt
								put
									fullName
									tagVarNumbers
								varName
								+
									varName
									StringLiteralExpr
							BlockStmt
								VariableDeclarator
									get
										fullName
										tagVarNumbers
									i
								varName
								+
									varName
									intValue
										i
								put
									fullName
									+
										intValue
											i
									tagVarNumbers
					tagVarNumbers
				ReturnStmt
					makeJavaIdentifier
						varName
						JspUtil
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getValue
						attr
					attrValue
				IfStmt
					==
						attrValue
						NullLiteralExpr
					BlockStmt
						IfStmt
							isNamedAttribute
								attr
							BlockStmt
								ReturnStmt
									NullLiteralExpr
							BlockStmt
								IfStmt
									checkIfAttributeIsJspFragment
										getName
											attr
										n
									BlockStmt
										attrValue
										generateNamedAttributeValue
											getNamedAttributeNode
												attr
									BlockStmt
										attrValue
										generateNamedAttributeJspFragment
											getNamedAttributeNode
												attr
											tagHandlerVar
				VariableDeclarator
					getLocalName
						attr
					localName
				VariableDeclarator
					NullLiteralExpr
					m
				VariableDeclarator
					NullLiteralExpr
					c
				IfStmt
					isDynamic
						attr
					BlockStmt
						m
						getSetterMethod
							localName
							handlerInfo
						IfStmt
							==
								m
								NullLiteralExpr
							BlockStmt
								jspError
									n
									StringLiteralExpr
									getName
										attr
									err
						c
						getParameterTypes
							m
					BlockStmt
						c
						OBJECT_CLASS
				IfStmt
					isExpression
						attr
					IfStmt
						isNamedAttribute
							attr
						IfStmt
							isELInterpreterInput
								attr
							BlockStmt
								attrValue
								convertString
									c
									attrValue
									localName
									getPropertyEditorClass
										localName
										handlerInfo
									BooleanLiteralExpr
							BlockStmt
								VariableDeclarator
									sb
								VariableDeclarator
									getTagAttributeInfo
										attr
									tai
								append
									getJspContextVar
									sb
								append
									StringLiteralExpr
									sb
								VariableDeclarator
									toString
										sb
									elContext
								IfStmt
									&&
										!=
											getEL
												attr
											NullLiteralExpr
										!=
											getMapName
												getEL
													attr
											NullLiteralExpr
									BlockStmt
										setLength
											sb
										append
											StringLiteralExpr
											sb
										append
											elContext
											sb
										append
											CharLiteralExpr
											sb
										append
											getMapName
												getEL
													attr
											sb
										append
											CharLiteralExpr
											sb
										elContext
										toString
											sb
								setLength
									sb
								append
									toString
										getStart
											n
									sb
								append
									StringLiteralExpr
									sb
								append
									attrValue
									sb
								append
									CharLiteralExpr
									sb
								VariableDeclarator
									toString
										sb
									mark
								setLength
									sb
								IfStmt
									||
										isDeferredInput
											attr
										&&
											!=
												tai
												NullLiteralExpr
											equals
												getTypeName
													tai
												getName
													ClassExpr
									IfStmt
										||
											isDeferredMethodInput
												attr
											&&
												!=
													tai
													NullLiteralExpr
												equals
													getTypeName
														tai
													getName
														ClassExpr
										BlockStmt
											VariableDeclarator
												!=
													getEL
														attr
													NullLiteralExpr
												NullLiteralExpr
												getMapName
													getEL
														attr
												mapName
											attrValue
											interpreterCall
												attrValue
												c
												mapName
												BooleanLiteralExpr
												JspUtil
										BlockStmt
											append
												StringLiteralExpr
												sb
											append
												quote
													mark
												sb
											append
												CharLiteralExpr
												sb
											append
												getExpressionFactoryVar
												sb
											append
												StringLiteralExpr
												sb
											append
												elContext
												sb
											append
												CharLiteralExpr
												sb
											append
												quote
													attrValue
												sb
											append
												CharLiteralExpr
												sb
											append
												toJavaSourceTypeFromTld
													getExpectedTypeName
														attr
													JspUtil
												sb
											append
												CharLiteralExpr
												sb
											append
												StringLiteralExpr
												sb
											VariableDeclarator
												getParameterTypeNames
													attr
												p
											ForStmt
												BlockStmt
													append
														toJavaSourceTypeFromTld
															i
															p
															JspUtil
														sb
													append
														CharLiteralExpr
														sb
												<
													i
													p
												VariableDeclarator
													i
													PrimitiveType
												++
													i
											IfStmt
												>
													p
												BlockStmt
													setLength
														-
															length
																sb
														sb
											append
												StringLiteralExpr
												sb
											attrValue
											toString
												sb
									BlockStmt
										append
											StringLiteralExpr
											sb
										append
											quote
												mark
											sb
										append
											CharLiteralExpr
											sb
										append
											getExpressionFactoryVar
											sb
										append
											StringLiteralExpr
											sb
										IfStmt
											!=
												getEL
													attr
												NullLiteralExpr
											BlockStmt
												append
													elContext
													sb
												append
													CharLiteralExpr
													sb
										append
											quote
												attrValue
											sb
										append
											CharLiteralExpr
											sb
										append
											toJavaSourceTypeFromTld
												getExpectedTypeName
													attr
												JspUtil
											sb
										append
											StringLiteralExpr
											sb
										VariableDeclarator
											BooleanLiteralExpr
											evaluate
											PrimitiveType
										IfStmt
											canBeRequestTime
												tai
											BlockStmt
												evaluate
												BooleanLiteralExpr
										IfStmt
											isDeferredInput
												attr
											BlockStmt
												evaluate
												BooleanLiteralExpr
										IfStmt
											&&
												isDeferredInput
													attr
												canBeRequestTime
													tai
											BlockStmt
												evaluate
												!
													contains
														StringLiteralExpr
														attrValue
										IfStmt
											evaluate
											BlockStmt
												append
													StringLiteralExpr
													sb
												append
													getJspContextVar
													sb
												append
													StringLiteralExpr
													sb
												append
													StringLiteralExpr
													sb
										attrValue
										toString
											sb
						BlockStmt
							IfStmt
								&&
									!
										checkIfAttributeIsJspFragment
											getName
												attr
											n
									!
										isDynamic
											attr
								BlockStmt
									attrValue
									convertString
										c
										attrValue
										localName
										getPropertyEditorClass
											localName
											handlerInfo
										BooleanLiteralExpr
					BlockStmt
				ReturnStmt
					attrValue
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getTagVariableInfos
						n
					tagVars
				VariableDeclarator
					NullLiteralExpr
					aliasMapVar
				VariableDeclarator
					BooleanLiteralExpr
					aliasSeen
					PrimitiveType
				ForStmt
					BlockStmt
						VariableDeclarator
							getNameFromAttribute
								i
								tagVars
							nameFrom
						IfStmt
							!=
								nameFrom
								NullLiteralExpr
							BlockStmt
								VariableDeclarator
									getAttributeValue
										nameFrom
										n
									aliasedName
								IfStmt
									==
										aliasedName
										NullLiteralExpr
									ContinueStmt
								IfStmt
									!
										aliasSeen
									BlockStmt
										printin
											StringLiteralExpr
											out
										aliasMapVar
										+
											tagHandlerVar
											StringLiteralExpr
										print
											aliasMapVar
											out
										println
											StringLiteralExpr
											out
										aliasSeen
										BooleanLiteralExpr
								printin
									aliasMapVar
									out
								print
									StringLiteralExpr
									out
								print
									quote
										getNameGiven
											i
											tagVars
									out
								print
									StringLiteralExpr
									out
								print
									quote
										aliasedName
									out
								println
									StringLiteralExpr
									out
					<
						i
						tagVars
					VariableDeclarator
						i
						PrimitiveType
					++
						i
				ReturnStmt
					aliasMapVar
		MethodDeclaration
			BlockStmt
				IfStmt
					simpleTag
					BlockStmt
						printin
							tagHandlerVar
							out
						println
							StringLiteralExpr
							out
					BlockStmt
						VariableDeclarator
							NullLiteralExpr
							aliasMapVar
						IfStmt
							isTagFile
								n
							BlockStmt
								aliasMapVar
								generateAliasMap
									n
									tagHandlerVar
						printin
							tagHandlerVar
							out
						IfStmt
							==
								aliasMapVar
								NullLiteralExpr
							BlockStmt
								print
									StringLiteralExpr
									out
								print
									aliasMapVar
									out
								println
									StringLiteralExpr
									out
							BlockStmt
								println
									StringLiteralExpr
									out
				IfStmt
					&&
						isTagFile
						==
							parent
							NullLiteralExpr
					IfStmt
						!
							simpleTag
						BlockStmt
							IfStmt
								!=
									parent
									NullLiteralExpr
								BlockStmt
									printin
										tagHandlerVar
										out
									print
										StringLiteralExpr
										out
									print
										parent
										out
									println
										StringLiteralExpr
										out
						BlockStmt
							printin
								tagHandlerVar
								out
							print
								StringLiteralExpr
								out
							IfStmt
								!=
									parent
									NullLiteralExpr
								BlockStmt
									println
										StringLiteralExpr
										out
								BlockStmt
									IfStmt
										isSimpleTagParent
										BlockStmt
											print
												StringLiteralExpr
												out
											print
												parent
												out
											println
												StringLiteralExpr
												out
										BlockStmt
											print
												StringLiteralExpr
												out
											print
												StringLiteralExpr
												out
											print
												parent
												out
											println
												StringLiteralExpr
												out
					BlockStmt
						printin
							tagHandlerVar
							out
						print
							StringLiteralExpr
							out
						print
							StringLiteralExpr
							out
						print
							StringLiteralExpr
							out
				VariableDeclarator
					getJspAttributes
						n
					attrs
				ForStmt
					BlockStmt
						VariableDeclarator
							evaluateAttribute
								handlerInfo
								i
								attrs
								n
								tagHandlerVar
							attrValue
						VariableDeclarator
							getStart
								n
							m
						printil
							+
								+
									+
										+
											+
												+
													+
														StringLiteralExpr
														getFile
															m
													StringLiteralExpr
												getLineNumber
													m
											StringLiteralExpr
										getColumnNumber
											m
									StringLiteralExpr
								getTagAttributeInfo
									i
									attrs
							out
						IfStmt
							isDynamic
								i
								attrs
							BlockStmt
								printin
									tagHandlerVar
									out
								print
									StringLiteralExpr
									out
								print
									getName
										getSetterMethod
											getLocalName
												i
												attrs
											handlerInfo
									out
								print
									StringLiteralExpr
									out
								print
									attrValue
									out
								println
									StringLiteralExpr
									out
							BlockStmt
								printin
									tagHandlerVar
									out
								print
									StringLiteralExpr
									out
								print
									StringLiteralExpr
									out
								VariableDeclarator
									getURI
										i
										attrs
									uri
								IfStmt
									||
										equals
											uri
											StringLiteralExpr
										==
											uri
											NullLiteralExpr
									BlockStmt
										print
											+
												+
													StringLiteralExpr
													getURI
														i
														attrs
												StringLiteralExpr
											out
									BlockStmt
										print
											StringLiteralExpr
											out
								print
									StringLiteralExpr
									out
								print
									getLocalName
										i
										attrs
									out
								print
									StringLiteralExpr
									out
								print
									attrValue
									out
								println
									StringLiteralExpr
									out
					&&
						!=
							attrs
							NullLiteralExpr
						<
							i
							attrs
					VariableDeclarator
						i
						PrimitiveType
					++
						i
			PrimitiveType
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					s
					quoted
				IfStmt
					!
						isNamedAttribute
					BlockStmt
						quoted
						quote
							s
				IfStmt
					!=
						propEditorClass
						NullLiteralExpr
					IfStmt
						==
							c
							ClassExpr
						IfStmt
							==
								c
								ClassExpr
									PrimitiveType
							IfStmt
								==
									c
									ClassExpr
								IfStmt
									==
										c
										ClassExpr
											PrimitiveType
									IfStmt
										==
											c
											ClassExpr
										IfStmt
											==
												c
												ClassExpr
													PrimitiveType
											IfStmt
												==
													c
													ClassExpr
												IfStmt
													==
														c
														ClassExpr
															PrimitiveType
													IfStmt
														==
															c
															ClassExpr
														IfStmt
															==
																c
																ClassExpr
																	PrimitiveType
															IfStmt
																==
																	c
																	ClassExpr
																IfStmt
																	==
																		c
																		ClassExpr
																			PrimitiveType
																	IfStmt
																		==
																			c
																			ClassExpr
																		IfStmt
																			==
																				c
																				ClassExpr
																					PrimitiveType
																			IfStmt
																				==
																					c
																					ClassExpr
																				IfStmt
																					==
																						c
																						ClassExpr
																							PrimitiveType
																					IfStmt
																						==
																							c
																							ClassExpr
																						IfStmt
																							==
																								c
																								ClassExpr
																							BlockStmt
																								VariableDeclarator
																									getCanonicalName
																										c
																										JspUtil
																									className
																								ReturnStmt
																									+
																										+
																											+
																												+
																													+
																														+
																															+
																																+
																																	StringLiteralExpr
																																	className
																																StringLiteralExpr
																															className
																														StringLiteralExpr
																													attrName
																												StringLiteralExpr
																											quoted
																										StringLiteralExpr
																							BlockStmt
																								ReturnStmt
																									+
																										+
																											StringLiteralExpr
																											quoted
																										StringLiteralExpr
																						BlockStmt
																							ReturnStmt
																								coerceToLong
																									s
																									isNamedAttribute
																									JspUtil
																					BlockStmt
																						ReturnStmt
																							coerceToPrimitiveLong
																								s
																								isNamedAttribute
																								JspUtil
																				BlockStmt
																					ReturnStmt
																						coerceToShort
																							s
																							isNamedAttribute
																							JspUtil
																			BlockStmt
																				ReturnStmt
																					coerceToPrimitiveShort
																						s
																						isNamedAttribute
																						JspUtil
																		BlockStmt
																			ReturnStmt
																				coerceToInteger
																					s
																					isNamedAttribute
																					JspUtil
																	BlockStmt
																		ReturnStmt
																			coerceToInt
																				s
																				isNamedAttribute
																				JspUtil
																BlockStmt
																	ReturnStmt
																		coerceToFloat
																			s
																			isNamedAttribute
																			JspUtil
															BlockStmt
																ReturnStmt
																	coerceToPrimitiveFloat
																		s
																		isNamedAttribute
																		JspUtil
														BlockStmt
															ReturnStmt
																coerceToDouble
																	s
																	isNamedAttribute
																	JspUtil
													BlockStmt
														ReturnStmt
															coerceToPrimitiveDouble
																s
																isNamedAttribute
																JspUtil
												BlockStmt
													ReturnStmt
														coerceToCharacter
															s
															isNamedAttribute
															JspUtil
											BlockStmt
												ReturnStmt
													coerceToChar
														s
														isNamedAttribute
														JspUtil
										BlockStmt
											ReturnStmt
												coerceToByte
													s
													isNamedAttribute
													JspUtil
									BlockStmt
										ReturnStmt
											coerceToPrimitiveByte
												s
												isNamedAttribute
												JspUtil
								BlockStmt
									ReturnStmt
										coerceToBoolean
											s
											isNamedAttribute
											JspUtil
							BlockStmt
								ReturnStmt
									coerceToPrimitiveBoolean
										s
										isNamedAttribute
										JspUtil
						BlockStmt
							ReturnStmt
								quoted
					BlockStmt
						VariableDeclarator
							getCanonicalName
								c
								JspUtil
							className
						ReturnStmt
							+
								+
									+
										+
											+
												+
													+
														+
															+
																+
																	StringLiteralExpr
																	className
																StringLiteralExpr
															className
														StringLiteralExpr
													attrName
												StringLiteralExpr
											quoted
										StringLiteralExpr
									getCanonicalName
										propEditorClass
										JspUtil
								StringLiteralExpr
			PrimitiveType
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					StringLiteralExpr
					scopeName
				IfStmt
					equals
						scope
						StringLiteralExpr
					IfStmt
						equals
							scope
							StringLiteralExpr
						IfStmt
							equals
								scope
								StringLiteralExpr
							BlockStmt
								scopeName
								StringLiteralExpr
						BlockStmt
							scopeName
							StringLiteralExpr
					BlockStmt
						scopeName
						StringLiteralExpr
				ReturnStmt
					scopeName
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					openFragment
						n
						tagHandlerVar
						methodNesting
						fragmentHelperClass
					fragment
				VariableDeclarator
					out
					outSave
				out
				getOut
					getGenBuffer
						fragment
				VariableDeclarator
					parent
					tmpParent
				parent
				StringLiteralExpr
				VariableDeclarator
					isSimpleTagParent
					isSimpleTagParentSave
					PrimitiveType
				isSimpleTagParent
				BooleanLiteralExpr
				VariableDeclarator
					isFragment
					tmpIsFragment
					PrimitiveType
				isFragment
				BooleanLiteralExpr
				VariableDeclarator
					pushBodyCountVar
					pushBodyCountVarSave
				IfStmt
					!=
						pushBodyCountVar
						NullLiteralExpr
					BlockStmt
						pushBodyCountVar
						StringLiteralExpr
				visitBody
					n
				out
				outSave
				parent
				tmpParent
				isSimpleTagParent
				isSimpleTagParentSave
				isFragment
				tmpIsFragment
				pushBodyCountVar
				pushBodyCountVarSave
				closeFragment
					fragment
					methodNesting
					fragmentHelperClass
				print
					+
						+
							+
								+
									+
										+
											+
												+
													StringLiteralExpr
													getClassName
														fragmentHelperClass
												StringLiteralExpr
											getId
												fragment
										StringLiteralExpr
									tagHandlerVar
								StringLiteralExpr
							pushBodyCountVar
						StringLiteralExpr
					out
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getTemporaryVariableName
						n
					varName
				VariableDeclarator
					getBody
						n
					body
				IfStmt
					!=
						body
						NullLiteralExpr
					BlockStmt
						printil
							+
								+
									StringLiteralExpr
									varName
								StringLiteralExpr
							out
					BlockStmt
						VariableDeclarator
							BooleanLiteralExpr
							templateTextOptimization
							PrimitiveType
						IfStmt
							==
								size
									body
							BlockStmt
								VariableDeclarator
									getNode
										body
									bodyElement
								IfStmt
									bodyElement
									BlockStmt
										templateTextOptimization
										BooleanLiteralExpr
										printil
											+
												+
													+
														+
															StringLiteralExpr
															varName
														StringLiteralExpr
													quote
														getText
															bodyElement
												StringLiteralExpr
											out
						IfStmt
							!
								templateTextOptimization
							BlockStmt
								printil
									StringLiteralExpr
									out
								visitBody
									n
								printil
									+
										+
											+
												+
													StringLiteralExpr
													varName
												StringLiteralExpr
											StringLiteralExpr
										StringLiteralExpr
									out
								printil
									StringLiteralExpr
									out
				ReturnStmt
					varName
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getTemporaryVariableName
						n
					varName
				printin
					+
						+
							StringLiteralExpr
							varName
						StringLiteralExpr
					out
				generateJspFragment
					n
					tagHandlerVar
				println
					StringLiteralExpr
					out
				ReturnStmt
					varName
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				ci
			IfStmt
				n
				IfStmt
					n
					IfStmt
						n
						BlockStmt
							ThrowStmt
								StringLiteralExpr
						BlockStmt
							ci
							getChildInfo
								n
					BlockStmt
						ci
						getChildInfo
							n
				BlockStmt
					ci
					getChildInfo
						n
			IfStmt
				hasUseBean
					ci
				BlockStmt
					printil
						StringLiteralExpr
						out
					printil
						StringLiteralExpr
						out
			IfStmt
				||
					||
						||
							hasUseBean
								ci
							hasIncludeAction
								ci
						hasSetProperty
							ci
					hasParamAction
						ci
				BlockStmt
					printil
						StringLiteralExpr
						out
			IfStmt
				hasIncludeAction
					ci
				BlockStmt
					printil
						StringLiteralExpr
						out
	MethodDeclaration
		BlockStmt
			ForStmt
				BlockStmt
					VariableDeclarator
						get
							i
							methodsBuffered
						methodBuffer
					adjustJavaLines
						-
							getJavaLine
								out
						methodBuffer
					printMultiLn
						toString
							methodBuffer
						out
				<
					i
					size
						methodsBuffered
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			IfStmt
				isUsed
					fragmentHelperClass
				BlockStmt
					generatePostamble
						fragmentHelperClass
					adjustJavaLines
						-
							getJavaLine
								out
						fragmentHelperClass
					printMultiLn
						toString
							fragmentHelperClass
						out
			IfStmt
				!=
					charArrayBuffer
					NullLiteralExpr
				BlockStmt
					printMultiLn
						toString
							charArrayBuffer
						out
			popIndent
				out
			printil
				StringLiteralExpr
				out
	MethodDeclaration
		BlockStmt
			popIndent
				out
			printil
				StringLiteralExpr
				out
			pushIndent
				out
			printil
				StringLiteralExpr
				out
			pushIndent
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			pushIndent
				out
			printil
				StringLiteralExpr
				out
			popIndent
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			popIndent
				out
			printil
				StringLiteralExpr
				out
			popIndent
				out
			printil
				StringLiteralExpr
				out
			pushIndent
				out
			printil
				StringLiteralExpr
				out
			popIndent
				out
			printil
				StringLiteralExpr
				out
			popIndent
				out
			printil
				StringLiteralExpr
				out
			genCommonPostamble
	ConstructorDeclaration
		BlockStmt
			out
			methodsBuffered
			charArrayBuffer
			NullLiteralExpr
			err
			getErrorDispatcher
				compiler
			ctxt
			getCompilationContext
				compiler
			fragmentHelperClass
			StringLiteralExpr
			pageInfo
			getPageInfo
				compiler
			IfStmt
				||
					==
						getExtends
							BooleanLiteralExpr
							pageInfo
						NullLiteralExpr
					POOL_TAGS_WITH_EXTENDS
				BlockStmt
					isPoolingEnabled
					BooleanLiteralExpr
				BlockStmt
					isPoolingEnabled
					isPoolingEnabled
						getOptions
							ctxt
			beanInfo
			getBeanRepository
				pageInfo
			varInfoNames
			getVarInfoNames
				pageInfo
			breakAtLF
			getMappedFile
				getOptions
					ctxt
			IfStmt
				isPoolingEnabled
				BlockStmt
					tagHandlerPoolNames
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				out
				compiler
				gen
			IfStmt
				gen
				BlockStmt
					compileTagHandlerPoolList
						page
						gen
			IfStmt
				isTagFile
					gen
				BlockStmt
					generatePreamble
						page
						gen
					generateXmlProlog
						page
						gen
					generatePreamble
						gen
					visit
						isTagFile
							gen
						out
						gen
						gen
						getClassLoader
							gen
						NullLiteralExpr
						gen
						page
					generatePostamble
						page
						gen
				BlockStmt
					VariableDeclarator
						getTagInfo
							gen
						tagInfo
					generateTagHandlerPreamble
						tagInfo
						page
						gen
					IfStmt
						isPrototypeMode
							gen
						BlockStmt
							ReturnStmt
					generateXmlProlog
						page
						gen
					generatePreamble
						gen
					visit
						isTagFile
							gen
						out
						gen
						gen
						getClassLoader
							gen
						tagInfo
						gen
						page
					generateTagHandlerPostamble
						tagInfo
						gen
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				getTagClassName
					tagInfo
				className
			VariableDeclarator
				lastIndexOf
					CharLiteralExpr
					className
				lastIndex
				PrimitiveType
			IfStmt
				!=
					lastIndex
					-
				BlockStmt
					VariableDeclarator
						substring
							lastIndex
							className
						pkgName
					genPreamblePackage
						pkgName
					className
					substring
						+
							lastIndex
						className
			genPreambleImports
			printin
				StringLiteralExpr
				out
			println
				className
				out
			printil
				StringLiteralExpr
				out
			printin
				StringLiteralExpr
				out
			IfStmt
				hasDynamicAttributes
					tagInfo
				BlockStmt
					println
						StringLiteralExpr
						out
					printin
						StringLiteralExpr
						out
			println
				StringLiteralExpr
				out
			println
				out
			pushIndent
				out
			generateDeclarations
				tag
			genPreambleStaticInitializers
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			genPreambleClassVariableDeclarations
				getTagName
					tagInfo
			generateSetJspContext
				tagInfo
			generateTagHandlerAttributes
				tagInfo
			IfStmt
				hasDynamicAttributes
					tagInfo
				generateSetDynamicAttribute
			genPreambleMethods
			printil
				StringLiteralExpr
				out
			IfStmt
				isPrototypeMode
					ctxt
				BlockStmt
					printil
						StringLiteralExpr
						out
					popIndent
						out
					printil
						StringLiteralExpr
						out
					ReturnStmt
			pushIndent
				out
			printil
				StringLiteralExpr
				out
			printil
				+
					StringLiteralExpr
					StringLiteralExpr
				out
			printil
				+
					StringLiteralExpr
					StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			generatePageScopedVariables
				tagInfo
			declareTemporaryScriptingVars
				tag
			println
				out
			printil
				StringLiteralExpr
				out
			pushIndent
				out
	MethodDeclaration
		BlockStmt
			popIndent
				out
			printil
				StringLiteralExpr
				out
			pushIndent
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			popIndent
				out
			printil
				StringLiteralExpr
				out
			pushIndent
				out
			VariableDeclarator
				getAttributes
					tagInfo
				attrInfos
			ForStmt
				BlockStmt
					IfStmt
						||
							isDeferredMethod
								i
								attrInfos
							isDeferredValue
								i
								attrInfos
						BlockStmt
							printin
								StringLiteralExpr
								out
							print
								quote
									getName
										i
										attrInfos
								out
							print
								StringLiteralExpr
								out
							print
								i
								out
							println
								StringLiteralExpr
								out
				<
					i
					attrInfos
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			IfStmt
				&&
					isPoolingEnabled
					!
						isEmpty
							tagHandlerPoolNames
				BlockStmt
					printil
						StringLiteralExpr
						out
			popIndent
				out
			printil
				StringLiteralExpr
				out
			popIndent
				out
			printil
				StringLiteralExpr
				out
			genCommonPostamble
	MethodDeclaration
		BlockStmt
			IfStmt
				hasDynamicAttributes
					tagInfo
				BlockStmt
					printil
						StringLiteralExpr
						out
			VariableDeclarator
				getAttributes
					tagInfo
				attrInfos
			ForStmt
				BlockStmt
					printin
						StringLiteralExpr
						out
					IfStmt
						isFragment
							i
							attrInfos
						BlockStmt
							print
								toJavaSourceType
									getTypeName
										i
										attrInfos
									JspUtil
								out
							print
								StringLiteralExpr
								out
						BlockStmt
							print
								StringLiteralExpr
								out
					print
						makeJavaIdentifierForAttribute
							getName
								i
								attrInfos
							JspUtil
						out
					println
						StringLiteralExpr
						out
				<
					i
					attrInfos
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			println
				out
			ForStmt
				BlockStmt
					VariableDeclarator
						makeJavaIdentifierForAttribute
							getName
								i
								attrInfos
							JspUtil
						javaName
					printin
						StringLiteralExpr
						out
					IfStmt
						isFragment
							i
							attrInfos
						BlockStmt
							print
								toJavaSourceType
									getTypeName
										i
										attrInfos
									JspUtil
								out
							print
								StringLiteralExpr
								out
						BlockStmt
							print
								StringLiteralExpr
								out
					print
						toGetterMethod
							getName
								i
								attrInfos
						out
					println
						StringLiteralExpr
						out
					pushIndent
						out
					printin
						StringLiteralExpr
						out
					print
						javaName
						out
					println
						StringLiteralExpr
						out
					popIndent
						out
					printil
						StringLiteralExpr
						out
					println
						out
					printin
						StringLiteralExpr
						out
					print
						toSetterMethodName
							getName
								i
								attrInfos
						out
					IfStmt
						isFragment
							i
							attrInfos
						BlockStmt
							print
								StringLiteralExpr
								out
							print
								toJavaSourceType
									getTypeName
										i
										attrInfos
									JspUtil
								out
							print
								StringLiteralExpr
								out
						BlockStmt
							print
								StringLiteralExpr
								out
					print
						javaName
						out
					println
						StringLiteralExpr
						out
					pushIndent
						out
					printin
						StringLiteralExpr
						out
					print
						javaName
						out
					print
						StringLiteralExpr
						out
					print
						javaName
						out
					println
						StringLiteralExpr
						out
					IfStmt
						isTagFile
							ctxt
						BlockStmt
							printin
								StringLiteralExpr
								out
							print
								getName
									i
									attrInfos
								out
							print
								StringLiteralExpr
								out
							print
								javaName
								out
							println
								StringLiteralExpr
								out
					popIndent
						out
					printil
						StringLiteralExpr
						out
					println
						out
				<
					i
					attrInfos
				VariableDeclarator
					i
					PrimitiveType
				++
					i
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				BooleanLiteralExpr
				nestedSeen
				PrimitiveType
			VariableDeclarator
				BooleanLiteralExpr
				atBeginSeen
				PrimitiveType
			VariableDeclarator
				BooleanLiteralExpr
				atEndSeen
				PrimitiveType
			VariableDeclarator
				BooleanLiteralExpr
				aliasSeen
				PrimitiveType
			VariableDeclarator
				getTagVariableInfos
					tagInfo
				tagVars
			ForStmt
				BlockStmt
					IfStmt
						&&
							!=
								getNameFromAttribute
									i
									tagVars
								NullLiteralExpr
							!=
								getNameGiven
									i
									tagVars
								NullLiteralExpr
						BlockStmt
							aliasSeen
							BooleanLiteralExpr
							BreakStmt
				<
					i
					tagVars
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			IfStmt
				aliasSeen
				BlockStmt
					printil
						StringLiteralExpr
						out
				BlockStmt
					printil
						StringLiteralExpr
						out
			pushIndent
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			printil
				StringLiteralExpr
				out
			ForStmt
				BlockStmt
					SwitchStmt
						SwitchEntryStmt
							VariableInfo
							IfStmt
								!
									nestedSeen
								BlockStmt
									printil
										StringLiteralExpr
										out
									nestedSeen
									BooleanLiteralExpr
							printin
								StringLiteralExpr
								out
							BreakStmt
						SwitchEntryStmt
							VariableInfo
							IfStmt
								!
									atBeginSeen
								BlockStmt
									printil
										StringLiteralExpr
										out
									atBeginSeen
									BooleanLiteralExpr
							printin
								StringLiteralExpr
								out
							BreakStmt
						SwitchEntryStmt
							VariableInfo
							IfStmt
								!
									atEndSeen
								BlockStmt
									printil
										StringLiteralExpr
										out
									atEndSeen
									BooleanLiteralExpr
							printin
								StringLiteralExpr
								out
							BreakStmt
						getScope
							i
							tagVars
					print
						quote
							getNameGiven
								i
								tagVars
						out
					println
						StringLiteralExpr
						out
				<
					i
					tagVars
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			IfStmt
				aliasSeen
				BlockStmt
					printil
						StringLiteralExpr
						out
				BlockStmt
					printil
						StringLiteralExpr
						out
			popIndent
				out
			printil
				StringLiteralExpr
				out
			println
				out
			printil
				StringLiteralExpr
				out
			pushIndent
				out
			printil
				StringLiteralExpr
				out
			popIndent
				out
			printil
				StringLiteralExpr
				out
	MethodDeclaration
		BlockStmt
			printil
				StringLiteralExpr
				out
			pushIndent
				out
			printil
				StringLiteralExpr
				out
			pushIndent
				out
			printil
				StringLiteralExpr
				out
			popIndent
				out
			popIndent
				out
			printil
				StringLiteralExpr
				out
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				getAttributes
					tagInfo
				attrInfos
			VariableDeclarator
				BooleanLiteralExpr
				variableMapperVar
				PrimitiveType
			ForStmt
				BlockStmt
					VariableDeclarator
						getName
							i
							attrInfos
						attrName
					IfStmt
						||
							isDeferredValue
								i
								attrInfos
							isDeferredMethod
								i
								attrInfos
						BlockStmt
							printil
								+
									+
										StringLiteralExpr
										toGetterMethod
											attrName
									StringLiteralExpr
								out
							pushIndent
								out
							printin
								StringLiteralExpr
								out
							print
								quote
									attrName
								out
							print
								StringLiteralExpr
								out
							print
								toGetterMethod
									attrName
								out
							println
								StringLiteralExpr
								out
							popIndent
								out
						BlockStmt
							IfStmt
								!
									variableMapperVar
								BlockStmt
									printil
										StringLiteralExpr
										out
									variableMapperVar
									BooleanLiteralExpr
							printin
								StringLiteralExpr
								out
							print
								i
								out
							print
								StringLiteralExpr
								out
							print
								quote
									attrName
								out
							print
								CharLiteralExpr
								out
							IfStmt
								isDeferredMethod
									i
									attrInfos
								BlockStmt
									print
										toGetterMethod
											attrName
										out
								BlockStmt
									print
										VAR_EXPRESSIONFACTORY
										out
									print
										StringLiteralExpr
										out
									print
										toGetterMethod
											attrName
										out
									print
										StringLiteralExpr
										out
							println
								StringLiteralExpr
								out
				<
					i
					attrInfos
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			IfStmt
				hasDynamicAttributes
					tagInfo
				BlockStmt
					printin
						StringLiteralExpr
						out
					print
						getDynamicAttributesMapName
							tagInfo
						out
					print
						StringLiteralExpr
						out
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				toCharArray
					attrName
				attrChars
				PrimitiveType
			attrChars
			toUpperCase
				attrChars
				Character
			ReturnStmt
				+
					+
						StringLiteralExpr
						attrChars
					StringLiteralExpr
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				toCharArray
					attrName
				attrChars
				PrimitiveType
			attrChars
			toUpperCase
				attrChars
				Character
			ReturnStmt
				+
					StringLiteralExpr
					attrChars
	ClassOrInterfaceDeclaration
		FieldDeclaration
			VariableDeclarator
				methodMaps
		FieldDeclaration
			VariableDeclarator
				propertyEditorMaps
		FieldDeclaration
			VariableDeclarator
				tagHandlerClass
		ConstructorDeclaration
			BlockStmt
				tagHandlerClass
				TryStmt
					CatchClause
						BlockStmt
							jspError
								n
								StringLiteralExpr
								getName
									tagHandlerClass
								ie
								err
					BlockStmt
						VariableDeclarator
							getBeanInfo
								tagHandlerClass
								Introspector
							tagClassInfo
						VariableDeclarator
							getPropertyDescriptors
								tagClassInfo
							pd
						ForStmt
							BlockStmt
								IfStmt
									!=
										getWriteMethod
											i
											pd
										NullLiteralExpr
									BlockStmt
										put
											getName
												i
												pd
											getWriteMethod
												i
												pd
											methodMaps
								IfStmt
									!=
										getPropertyEditorClass
											i
											pd
										NullLiteralExpr
									put
										getName
											i
											pd
										getPropertyEditorClass
											i
											pd
										propertyEditorMaps
							<
								i
								pd
							VariableDeclarator
								i
								PrimitiveType
							++
								i
		MethodDeclaration
			BlockStmt
				ReturnStmt
					get
						attrName
						methodMaps
		MethodDeclaration
			BlockStmt
				ReturnStmt
					get
						attrName
						propertyEditorMaps
		MethodDeclaration
			BlockStmt
				ReturnStmt
					tagHandlerClass
	ClassOrInterfaceDeclaration
		FieldDeclaration
			VariableDeclarator
				node
		FieldDeclaration
			VariableDeclarator
				body
		FieldDeclaration
			VariableDeclarator
				charWriter
		FieldDeclaration
			VariableDeclarator
				out
		ConstructorDeclaration
			BlockStmt
				NullLiteralExpr
				NullLiteralExpr
		ConstructorDeclaration
			BlockStmt
				node
				n
				body
				b
				IfStmt
					!=
						body
						NullLiteralExpr
					BlockStmt
						setGeneratedInBuffer
							BooleanLiteralExpr
							body
				charWriter
				out
				charWriter
		MethodDeclaration
			BlockStmt
				ReturnStmt
					out
		MethodDeclaration
			BlockStmt
				ReturnStmt
					toString
						charWriter
		MethodDeclaration
			BlockStmt
				IfStmt
					!=
						node
						NullLiteralExpr
					BlockStmt
						adjustJavaLine
							node
							offset
				IfStmt
					!=
						body
						NullLiteralExpr
					BlockStmt
						TryStmt
							CatchClause
								BlockStmt
							BlockStmt
								visit
									MethodDeclaration
										BlockStmt
											adjustJavaLine
												n
												offset
									MethodDeclaration
										BlockStmt
											VariableDeclarator
												getBody
													n
												b
											IfStmt
												&&
													!=
														b
														NullLiteralExpr
													!
														isGeneratedInBuffer
															b
												BlockStmt
													visit
														b
									body
			PrimitiveType
		MethodDeclaration
			BlockStmt
				IfStmt
					>
						getBeginJavaLine
							n
					BlockStmt
						setBeginJavaLine
							+
								getBeginJavaLine
									n
								offset
							n
						setEndJavaLine
							+
								getEndJavaLine
									n
								offset
							n
			PrimitiveType
	ClassOrInterfaceDeclaration
		ClassOrInterfaceDeclaration
			FieldDeclaration
				VariableDeclarator
					genBuffer
			FieldDeclaration
				VariableDeclarator
					id
					PrimitiveType
			ConstructorDeclaration
				BlockStmt
					id
					genBuffer
					NullLiteralExpr
					getBody
						node
				PrimitiveType
			MethodDeclaration
				BlockStmt
					ReturnStmt
			MethodDeclaration
				BlockStmt
					ReturnStmt
				PrimitiveType
		FieldDeclaration
			VariableDeclarator
				BooleanLiteralExpr
				used
				PrimitiveType
		FieldDeclaration
			VariableDeclarator
				fragments
		FieldDeclaration
			VariableDeclarator
				className
		FieldDeclaration
			VariableDeclarator
				classBuffer
		ConstructorDeclaration
			BlockStmt
				className
		MethodDeclaration
			BlockStmt
				ReturnStmt
		MethodDeclaration
			BlockStmt
				ReturnStmt
			PrimitiveType
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getOut
					out
				println
					out
				pushIndent
					out
				printil
					+
						StringLiteralExpr
						className
					out
				printil
					+
						StringLiteralExpr
						StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				pushIndent
					out
				printil
					StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				println
					out
				printil
					+
						+
							+
								+
									StringLiteralExpr
									className
								StringLiteralExpr
							StringLiteralExpr
						StringLiteralExpr
					out
				pushIndent
					out
				printil
					StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				popIndent
					out
				printil
					StringLiteralExpr
					out
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					size
						fragments
					parent
					result
				add
					result
					fragments
				BooleanLiteralExpr
				setInnerClassName
					className
					parent
				VariableDeclarator
					getOut
						getGenBuffer
							result
					out
				pushIndent
					out
				pushIndent
					out
				IfStmt
					>
						methodNesting
					BlockStmt
						printin
							StringLiteralExpr
							out
					BlockStmt
						printin
							StringLiteralExpr
							out
				println
					+
						+
							getId
								result
							StringLiteralExpr
						StringLiteralExpr
					out
				pushIndent
					out
				printil
					StringLiteralExpr
					out
				popIndent
					out
				printil
					StringLiteralExpr
					out
				pushIndent
					out
				generateLocalVariables
					out
					parent
				ReturnStmt
					result
			PrimitiveType
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getOut
						getGenBuffer
							fragment
					out
				IfStmt
					>
						methodNesting
					BlockStmt
						printil
							StringLiteralExpr
							out
					BlockStmt
						printil
							StringLiteralExpr
							out
				popIndent
					out
				printil
					StringLiteralExpr
					out
			PrimitiveType
		MethodDeclaration
			BlockStmt
				VariableDeclarator
					getOut
					out
				ForStmt
					BlockStmt
						VariableDeclarator
							get
								i
								fragments
							fragment
						adjustJavaLines
							-
								getJavaLine
									out
							getGenBuffer
								fragment
						printMultiLn
							toString
								getGenBuffer
									fragment
							out
					<
						i
						size
							fragments
					VariableDeclarator
						i
						PrimitiveType
					++
						i
				printil
					StringLiteralExpr
					out
				pushIndent
					out
				printil
					StringLiteralExpr
					out
				popIndent
					out
				printil
					StringLiteralExpr
					out
				pushIndent
					out
				printil
					StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				pushIndent
					out
				printil
					StringLiteralExpr
					out
				popIndent
					out
				printil
					StringLiteralExpr
					out
				pushIndent
					out
				printil
					StringLiteralExpr
					out
				popIndent
					out
				printil
					StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				pushIndent
					out
				printil
					StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				pushIndent
					out
				ForStmt
					BlockStmt
						printil
							+
								+
									StringLiteralExpr
									i
								StringLiteralExpr
							out
						pushIndent
							out
						printil
							+
								+
									StringLiteralExpr
									i
								StringLiteralExpr
							out
						printil
							StringLiteralExpr
							out
						popIndent
							out
					<
						i
						size
							fragments
					VariableDeclarator
						i
						PrimitiveType
					++
						i
				popIndent
					out
				printil
					StringLiteralExpr
					out
				popIndent
					out
				printil
					StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				pushIndent
					out
				printil
					StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				popIndent
					out
				printil
					StringLiteralExpr
					out
				printil
					StringLiteralExpr
					out
				pushIndent
					out
				printil
					StringLiteralExpr
					out
				pushIndent
					out
				printil
					StringLiteralExpr
					out
				popIndent
					out
				printil
					StringLiteralExpr
					out
				popIndent
					out
				printil
					StringLiteralExpr
					out
				popIndent
					out
				printil
					StringLiteralExpr
					out
				popIndent
					out
				printil
					StringLiteralExpr
					out
				popIndent
					out
		MethodDeclaration
			BlockStmt
				ReturnStmt
					toString
						classBuffer
		MethodDeclaration
			BlockStmt
				ForStmt
					BlockStmt
						VariableDeclarator
							get
								i
								fragments
							fragment
						adjustJavaLines
							offset
							getGenBuffer
								fragment
					<
						i
						size
							fragments
					VariableDeclarator
						i
						PrimitiveType
					++
						i
			PrimitiveType

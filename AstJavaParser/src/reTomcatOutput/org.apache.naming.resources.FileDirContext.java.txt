ClassOrInterfaceDeclaration
	FieldDeclaration
		VariableDeclarator
			getLog
				ClassExpr
				org
			log
	FieldDeclaration
		VariableDeclarator
			BUFFER_SIZE
			PrimitiveType
	ConstructorDeclaration
		BlockStmt
	ConstructorDeclaration
		BlockStmt
			env
	FieldDeclaration
		VariableDeclarator
			NullLiteralExpr
			base
	FieldDeclaration
		VariableDeclarator
			NullLiteralExpr
			absoluteBase
	FieldDeclaration
		VariableDeclarator
			BooleanLiteralExpr
			caseSensitive
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			BooleanLiteralExpr
			allowLinking
			PrimitiveType
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					docBase
					NullLiteralExpr
				ThrowStmt
					getString
						StringLiteralExpr
						sm
			base
			docBase
			TryStmt
				CatchClause
					BlockStmt
				BlockStmt
					base
					getCanonicalFile
						base
			IfStmt
				||
					||
						!
							exists
								base
						!
							isDirectory
								base
					!
						canRead
							base
				ThrowStmt
					getString
						StringLiteralExpr
						docBase
						sm
			getAbsolutePath
				base
			setDocBase
				docBase
				SuperExpr
	MethodDeclaration
		BlockStmt
			caseSensitive
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				caseSensitive
		PrimitiveType
	MethodDeclaration
		BlockStmt
			allowLinking
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				allowLinking
		PrimitiveType
	MethodDeclaration
		BlockStmt
			release
				SuperExpr
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				NullLiteralExpr
				result
			VariableDeclarator
				file
					name
				file
			IfStmt
				==
					file
					NullLiteralExpr
				ThrowStmt
					getString
						StringLiteralExpr
						name
						sm
			IfStmt
				isDirectory
					file
				BlockStmt
					result
					file
				BlockStmt
					VariableDeclarator
						env
						tempContext
					setDocBase
						getPath
							file
						tempContext
					setAllowLinking
						getAllowLinking
						tempContext
					setCaseSensitive
						isCaseSensitive
						tempContext
					result
					tempContext
			ReturnStmt
				result
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				file
					name
				file
			IfStmt
				==
					file
					NullLiteralExpr
				ThrowStmt
					getString
						StringLiteralExpr
						name
						sm
			IfStmt
				!
					delete
						file
				ThrowStmt
					getString
						StringLiteralExpr
						name
						sm
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				file
					oldName
				file
			IfStmt
				==
					file
					NullLiteralExpr
				ThrowStmt
					getString
						StringLiteralExpr
						oldName
						sm
			VariableDeclarator
				base
				newName
				newFile
			renameTo
				newFile
				file
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				file
					name
				file
			IfStmt
				==
					file
					NullLiteralExpr
				ThrowStmt
					getString
						StringLiteralExpr
						name
						sm
			ReturnStmt
				iterator
					list
						file
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				file
					name
				file
			IfStmt
				==
					file
					NullLiteralExpr
				ThrowStmt
					getString
						StringLiteralExpr
						name
						sm
			ReturnStmt
				iterator
					list
						file
	MethodDeclaration
		BlockStmt
			unbind
				name
	MethodDeclaration
		BlockStmt
			ReturnStmt
				lookup
					name
	MethodDeclaration
		BlockStmt
			ReturnStmt
				docBase
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				file
					name
				file
			IfStmt
				==
					file
					NullLiteralExpr
				ThrowStmt
					getString
						StringLiteralExpr
						name
						sm
			ReturnStmt
				file
	MethodDeclaration
		BlockStmt
		PrimitiveType
	MethodDeclaration
		BlockStmt
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				base
				name
				file
			IfStmt
				exists
					file
				ThrowStmt
					getString
						StringLiteralExpr
						name
						sm
			rebind
				name
				obj
				attrs
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				base
				name
				file
			VariableDeclarator
				NullLiteralExpr
				is
			IfStmt
				obj
				IfStmt
					obj
					IfStmt
						obj
						BlockStmt
							IfStmt
								exists
									file
								BlockStmt
									IfStmt
										!
											delete
												file
										ThrowStmt
											getString
												StringLiteralExpr
												name
												sm
							IfStmt
								!
									mkdir
										file
								ThrowStmt
									getString
										StringLiteralExpr
										name
										sm
					BlockStmt
						is
						obj
				BlockStmt
					TryStmt
						CatchClause
							BlockStmt
						BlockStmt
							is
							streamContent
								obj
			IfStmt
				==
					is
					NullLiteralExpr
				ThrowStmt
					getString
						StringLiteralExpr
						name
						sm
			TryStmt
				CatchClause
					BlockStmt
						VariableDeclarator
							getString
								StringLiteralExpr
								e
								sm
							ne
						initCause
							e
							ne
						ThrowStmt
							ne
				BlockStmt
					VariableDeclarator
						NullLiteralExpr
						os
					VariableDeclarator
						PrimitiveType
						BUFFER_SIZE
						buffer
						PrimitiveType
					VariableDeclarator
						-
						len
						PrimitiveType
					TryStmt
						BlockStmt
							IfStmt
								!=
									os
									NullLiteralExpr
								close
									os
							close
								is
						BlockStmt
							os
							file
							WhileStmt
								BlockStmt
									len
									read
										buffer
										is
									IfStmt
										==
											len
											-
										BreakStmt
									write
										buffer
										len
										os
								BooleanLiteralExpr
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				base
				name
				file
			IfStmt
				exists
					file
				ThrowStmt
					getString
						StringLiteralExpr
						name
						sm
			IfStmt
				!
					mkdir
						file
				ThrowStmt
					getString
						StringLiteralExpr
						name
						sm
			ReturnStmt
				lookup
					name
	MethodDeclaration
		BlockStmt
			ThrowStmt
	MethodDeclaration
		BlockStmt
			ThrowStmt
	MethodDeclaration
		BlockStmt
			ReturnStmt
				NullLiteralExpr
	MethodDeclaration
		BlockStmt
			ReturnStmt
				NullLiteralExpr
	MethodDeclaration
		BlockStmt
			ReturnStmt
				NullLiteralExpr
	MethodDeclaration
		BlockStmt
			ReturnStmt
				NullLiteralExpr
	MethodDeclaration
		BlockStmt
			ReturnStmt
				normalize
					path
					==
						File
						CharLiteralExpr
					RequestUtil
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				base
				name
				file
			IfStmt
				&&
					exists
						file
					canRead
						file
				BlockStmt
					ReturnStmt
						NullLiteralExpr
				BlockStmt
					IfStmt
						allowLinking
						ReturnStmt
							file
					VariableDeclarator
						NullLiteralExpr
						canPath
					TryStmt
						CatchClause
							BlockStmt
						BlockStmt
							canPath
							getCanonicalPath
								file
					IfStmt
						==
							canPath
							NullLiteralExpr
						ReturnStmt
							NullLiteralExpr
					IfStmt
						!
							startsWith
								absoluteBase
								canPath
						BlockStmt
							ReturnStmt
								NullLiteralExpr
					IfStmt
						caseSensitive
						BlockStmt
							VariableDeclarator
								getAbsolutePath
									file
								fileAbsPath
							IfStmt
								endsWith
									StringLiteralExpr
									fileAbsPath
								fileAbsPath
								+
									fileAbsPath
									StringLiteralExpr
							VariableDeclarator
								normalize
									fileAbsPath
								absPath
							IfStmt
								!=
									canPath
									NullLiteralExpr
								canPath
								normalize
									canPath
							IfStmt
								&&
									<
										length
											absoluteBase
										length
											absPath
									<
										length
											absoluteBase
										length
											canPath
								BlockStmt
									absPath
									substring
										+
											length
												absoluteBase
										absPath
									IfStmt
										||
											==
												canPath
												NullLiteralExpr
											==
												absPath
												NullLiteralExpr
										ReturnStmt
											NullLiteralExpr
									IfStmt
										equals
											StringLiteralExpr
											absPath
										absPath
										StringLiteralExpr
									canPath
									substring
										+
											length
												absoluteBase
										canPath
									IfStmt
										equals
											StringLiteralExpr
											canPath
										canPath
										StringLiteralExpr
									IfStmt
										!
											equals
												absPath
												canPath
										ReturnStmt
											NullLiteralExpr
			ReturnStmt
				file
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				entries
			IfStmt
				!
					isDirectory
						file
				ReturnStmt
					entries
			VariableDeclarator
				list
					file
				names
			IfStmt
				==
					names
					NullLiteralExpr
				BlockStmt
					warn
						getString
							StringLiteralExpr
							getAbsolutePath
								file
							sm
						log
					ReturnStmt
						entries
			sort
				names
				Arrays
			IfStmt
				==
					names
					NullLiteralExpr
				ReturnStmt
					entries
			VariableDeclarator
				NullLiteralExpr
				entry
			ForStmt
				BlockStmt
					VariableDeclarator
						file
						i
						names
						currentFile
					VariableDeclarator
						NullLiteralExpr
						object
					IfStmt
						isDirectory
							currentFile
						BlockStmt
							object
							currentFile
						BlockStmt
							VariableDeclarator
								env
								tempContext
							setDocBase
								getPath
									currentFile
								tempContext
							setAllowLinking
								getAllowLinking
								tempContext
							setCaseSensitive
								isCaseSensitive
								tempContext
							object
							tempContext
					entry
					i
					names
					object
					NamingEntry
					add
						entry
						entries
				<
					i
					names
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			ReturnStmt
				entries
	ClassOrInterfaceDeclaration
		ConstructorDeclaration
			BlockStmt
				file
		FieldDeclaration
			VariableDeclarator
				file
		FieldDeclaration
			VariableDeclarator
				-
					LongLiteralExpr
				length
				PrimitiveType
		MethodDeclaration
			BlockStmt
				IfStmt
					==
						binaryContent
						NullLiteralExpr
					BlockStmt
						VariableDeclarator
							file
							fis
						inputStream
						fis
						ReturnStmt
							fis
				ReturnStmt
					streamContent
						SuperExpr
	ClassOrInterfaceDeclaration
		ConstructorDeclaration
			BlockStmt
				file
				getCreation
				getLastModified
		FieldDeclaration
			VariableDeclarator
				file
		FieldDeclaration
			VariableDeclarator
				BooleanLiteralExpr
				accessed
				PrimitiveType
		FieldDeclaration
			VariableDeclarator
				NullLiteralExpr
				canonicalPath
		MethodDeclaration
			BlockStmt
				IfStmt
					!
						accessed
					BlockStmt
						collection
						isDirectory
							file
						accessed
						BooleanLiteralExpr
				ReturnStmt
					isCollection
						SuperExpr
			PrimitiveType
		MethodDeclaration
			BlockStmt
				IfStmt
					!=
						contentLength
						-
							LongLiteralExpr
					ReturnStmt
						contentLength
				contentLength
				length
					file
				ReturnStmt
					contentLength
			PrimitiveType
		MethodDeclaration
			BlockStmt
				IfStmt
					!=
						creation
						-
							LongLiteralExpr
					ReturnStmt
						creation
				creation
				getLastModified
				ReturnStmt
					creation
			PrimitiveType
		MethodDeclaration
			BlockStmt
				IfStmt
					==
						creation
						-
							LongLiteralExpr
					BlockStmt
						creation
						getCreation
				ReturnStmt
					getCreationDate
						SuperExpr
		MethodDeclaration
			BlockStmt
				IfStmt
					!=
						lastModified
						-
							LongLiteralExpr
					ReturnStmt
						lastModified
				lastModified
				lastModified
					file
				ReturnStmt
					lastModified
			PrimitiveType
		MethodDeclaration
			BlockStmt
				IfStmt
					==
						lastModified
						-
							LongLiteralExpr
					BlockStmt
						lastModified
						getLastModified
				ReturnStmt
					getLastModifiedDate
						SuperExpr
		MethodDeclaration
			BlockStmt
				IfStmt
					==
						name
						NullLiteralExpr
					name
					getName
						file
				ReturnStmt
					name
		MethodDeclaration
			BlockStmt
				IfStmt
					!
						accessed
					BlockStmt
						collection
						isDirectory
							file
						accessed
						BooleanLiteralExpr
				ReturnStmt
					getResourceType
						SuperExpr
		MethodDeclaration
			BlockStmt
				IfStmt
					==
						canonicalPath
						NullLiteralExpr
					BlockStmt
						TryStmt
							CatchClause
								BlockStmt
							BlockStmt
								canonicalPath
								getCanonicalPath
									file
				ReturnStmt
					canonicalPath

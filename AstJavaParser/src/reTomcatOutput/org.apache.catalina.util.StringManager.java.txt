ClassOrInterfaceDeclaration
	FieldDeclaration
		VariableDeclarator
			bundle
	FieldDeclaration
		VariableDeclarator
			getLog
				ClassExpr
				org
			log
	ConstructorDeclaration
		BlockStmt
			VariableDeclarator
				+
					packageName
					StringLiteralExpr
				bundleName
			TryStmt
				CatchClause
					BlockStmt
						VariableDeclarator
							getContextClassLoader
								currentThread
									Thread
							cl
						IfStmt
							!=
								cl
								NullLiteralExpr
							BlockStmt
								TryStmt
									CatchClause
										BlockStmt
									BlockStmt
										bundle
										getBundle
											bundleName
											getDefault
												Locale
											cl
											ResourceBundle
										ReturnStmt
						IfStmt
							==
								cl
								NullLiteralExpr
							cl
							getClassLoader
								getClass
						IfStmt
							isDebugEnabled
								log
							debug
								+
									+
										+
											StringLiteralExpr
											bundleName
										StringLiteralExpr
									cl
								log
						IfStmt
							cl
							BlockStmt
								IfStmt
									isDebugEnabled
										log
									debug
										getURLs
											cl
										log
				BlockStmt
					bundle
					getBundle
						bundleName
						ResourceBundle
					ReturnStmt
	MethodDeclaration
		BlockStmt
			ReturnStmt
				format
					getStringInternal
						key
					NullLiteralExpr
					MessageFormat
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					key
					NullLiteralExpr
				BlockStmt
					VariableDeclarator
						StringLiteralExpr
						msg
					ThrowStmt
						msg
			VariableDeclarator
				NullLiteralExpr
				str
			IfStmt
				==
					bundle
					NullLiteralExpr
				ReturnStmt
					key
			TryStmt
				CatchClause
					BlockStmt
						str
						+
							+
								StringLiteralExpr
								key
							StringLiteralExpr
				BlockStmt
					str
					getString
						key
						bundle
			ReturnStmt
				str
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				NullLiteralExpr
				iString
			VariableDeclarator
				getStringInternal
					key
				value
			TryStmt
				CatchClause
					BlockStmt
						VariableDeclarator
							buf
						append
							value
							buf
						ForStmt
							BlockStmt
								append
									+
										+
											+
												StringLiteralExpr
												i
											StringLiteralExpr
										i
										args
									buf
							<
								i
								args
							VariableDeclarator
								i
								PrimitiveType
							++
								i
						iString
						toString
							buf
				BlockStmt
					VariableDeclarator
						args
						nonNullArgs
					ForStmt
						BlockStmt
							IfStmt
								==
									i
									args
									NullLiteralExpr
								BlockStmt
									IfStmt
										==
											nonNullArgs
											args
										nonNullArgs
										clone
											args
									i
									nonNullArgs
									StringLiteralExpr
						<
							i
							args
						VariableDeclarator
							i
							PrimitiveType
						++
							i
					iString
					format
						value
						nonNullArgs
						MessageFormat
			ReturnStmt
				iString
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				ArrayInitializerExpr
					arg
				args
			ReturnStmt
				getString
					key
					args
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				ArrayInitializerExpr
					arg1
					arg2
				args
			ReturnStmt
				getString
					key
					args
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				ArrayInitializerExpr
					arg1
					arg2
					arg3
				args
			ReturnStmt
				getString
					key
					args
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				ArrayInitializerExpr
					arg1
					arg2
					arg3
					arg4
				args
			ReturnStmt
				getString
					key
					args
	FieldDeclaration
		VariableDeclarator
			managers
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				get
					packageName
					managers
				mgr
			IfStmt
				==
					mgr
					NullLiteralExpr
				BlockStmt
					mgr
					packageName
					put
						packageName
						mgr
						managers
			ReturnStmt
				mgr

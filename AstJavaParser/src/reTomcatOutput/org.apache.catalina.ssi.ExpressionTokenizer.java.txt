ClassOrInterfaceDeclaration
	FieldDeclaration
		VariableDeclarator
			TOKEN_STRING
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			TOKEN_AND
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			TOKEN_OR
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			TOKEN_NOT
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			TOKEN_EQ
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			TOKEN_NOT_EQ
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			TOKEN_RBRACE
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			TOKEN_LBRACE
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			TOKEN_GE
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			TOKEN_LE
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			TOKEN_GT
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			TOKEN_LT
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			TOKEN_END
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			expr
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			NullLiteralExpr
			tokenVal
	FieldDeclaration
		VariableDeclarator
			index
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			length
			PrimitiveType
	ConstructorDeclaration
		BlockStmt
			toCharArray
				trim
					expr
	MethodDeclaration
		BlockStmt
			ReturnStmt
				<
					index
					length
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				index
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				||
					||
						||
							||
								||
									||
										||
											||
												isWhitespace
													c
													Character
												==
													c
													CharLiteralExpr
											==
												c
												CharLiteralExpr
										==
											c
											CharLiteralExpr
									==
										c
										CharLiteralExpr
								==
									c
									CharLiteralExpr
							==
								c
								CharLiteralExpr
						==
							c
							CharLiteralExpr
					==
						c
						CharLiteralExpr
		PrimitiveType
		PrimitiveType
	MethodDeclaration
		BlockStmt
			WhileStmt
				++
					index
				&&
					<
						index
						length
					isWhitespace
						index
						expr
						Character
			tokenVal
			NullLiteralExpr
			IfStmt
				==
					index
					length
				ReturnStmt
					TOKEN_END
			VariableDeclarator
				index
				start
				PrimitiveType
			VariableDeclarator
				index
				expr
				currentChar
				PrimitiveType
			VariableDeclarator
				PrimitiveType
				nextChar
				PrimitiveType
			++
				index
			IfStmt
				<
					index
					length
				nextChar
				index
				expr
			SwitchStmt
				SwitchEntryStmt
					CharLiteralExpr
					ReturnStmt
						TOKEN_LBRACE
				SwitchEntryStmt
					CharLiteralExpr
					ReturnStmt
						TOKEN_RBRACE
				SwitchEntryStmt
					CharLiteralExpr
					ReturnStmt
						TOKEN_EQ
				SwitchEntryStmt
					CharLiteralExpr
					IfStmt
						==
							nextChar
							CharLiteralExpr
						BlockStmt
							ReturnStmt
								TOKEN_NOT
						BlockStmt
							++
								index
							ReturnStmt
								TOKEN_NOT_EQ
				SwitchEntryStmt
					CharLiteralExpr
					IfStmt
						==
							nextChar
							CharLiteralExpr
						BlockStmt
							++
								index
							ReturnStmt
								TOKEN_OR
					BreakStmt
				SwitchEntryStmt
					CharLiteralExpr
					IfStmt
						==
							nextChar
							CharLiteralExpr
						BlockStmt
							++
								index
							ReturnStmt
								TOKEN_AND
					BreakStmt
				SwitchEntryStmt
					CharLiteralExpr
					IfStmt
						==
							nextChar
							CharLiteralExpr
						BlockStmt
							ReturnStmt
								TOKEN_GT
						BlockStmt
							++
								index
							ReturnStmt
								TOKEN_GE
				SwitchEntryStmt
					CharLiteralExpr
					IfStmt
						==
							nextChar
							CharLiteralExpr
						BlockStmt
							ReturnStmt
								TOKEN_LT
						BlockStmt
							++
								index
							ReturnStmt
								TOKEN_LE
				SwitchEntryStmt
					BreakStmt
				currentChar
			VariableDeclarator
				index
				end
				PrimitiveType
			IfStmt
				||
					==
						currentChar
						CharLiteralExpr
					==
						currentChar
						CharLiteralExpr
				BlockStmt
					ForStmt
						BlockStmt
							IfStmt
								isMetaChar
									index
									expr
								BreakStmt
						<
							index
							length
						++
							index
					end
					index
				BlockStmt
					VariableDeclarator
						currentChar
						endChar
						PrimitiveType
					VariableDeclarator
						BooleanLiteralExpr
						escaped
						PrimitiveType
					++
						start
					ForStmt
						BlockStmt
							IfStmt
								&&
									==
										index
										expr
										CharLiteralExpr
									!
										escaped
								BlockStmt
									escaped
									BooleanLiteralExpr
									ContinueStmt
							IfStmt
								&&
									==
										index
										expr
										endChar
									!
										escaped
								BreakStmt
							escaped
							BooleanLiteralExpr
						<
							index
							length
						++
							index
					end
					index
					++
						index
			expr
			start
			-
				end
				start
			ReturnStmt
				TOKEN_STRING
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				tokenVal

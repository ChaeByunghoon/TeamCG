ClassOrInterfaceDeclaration
	FieldDeclaration
		VariableDeclarator
			getLog
				ClassExpr
				org
			log
	FieldDeclaration
		VariableDeclarator
			BooleanLiteralExpr
			paused
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			epNote
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			adapter
	FieldDeclaration
		VariableDeclarator
			NullLiteralExpr
			jkMain
	MethodDeclaration
		BlockStmt
			IfStmt
				isTraceEnabled
					log
				trace
					+
						+
							+
								StringLiteralExpr
								name
							StringLiteralExpr
						value
					log
			setProperty
				name
				value
				getJkMain
			put
				name
				value
				properties
	MethodDeclaration
		BlockStmt
			ReturnStmt
				getProperty
					name
					properties
	MethodDeclaration
		BlockStmt
			ReturnStmt
				iterator
					keySet
						properties
	MethodDeclaration
		BlockStmt
			IfStmt
				isDebugEnabled
					log
				debug
					+
						+
							+
								StringLiteralExpr
								name
							StringLiteralExpr
						value
					log
			IfStmt
				value
				setProperty
					name
					value
	MethodDeclaration
		BlockStmt
			ReturnStmt
				getProperty
					name
					getJkMain
	MethodDeclaration
		BlockStmt
			adapter
	MethodDeclaration
		BlockStmt
			ReturnStmt
				adapter
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					jkMain
					NullLiteralExpr
				BlockStmt
					jkMain
					setWorkerEnv
						wEnv
						jkMain
			ReturnStmt
				jkMain
	FieldDeclaration
		VariableDeclarator
			BooleanLiteralExpr
			started
			PrimitiveType
	MethodDeclaration
		BlockStmt
			IfStmt
				started
				ReturnStmt
			started
			BooleanLiteralExpr
			IfStmt
				==
					wEnv
					NullLiteralExpr
				BlockStmt
					wEnv
					getWorkerEnv
						getJkMain
					addHandler
						StringLiteralExpr
						wEnv
			TryStmt
				CatchClause
					BlockStmt
						error
							StringLiteralExpr
							ex
							log
				BlockStmt
					init
						getJkMain
	MethodDeclaration
		BlockStmt
			TryStmt
				CatchClause
					BlockStmt
						error
							StringLiteralExpr
							ex
							log
				BlockStmt
					IfStmt
						&&
							!=
								oname
								NullLiteralExpr
							==
								getDomain
									getJkMain
								NullLiteralExpr
						BlockStmt
							TryStmt
								CatchClause
									BlockStmt
										error
											+
												StringLiteralExpr
												e
											log
								BlockStmt
									VariableDeclarator
										+
											getDomain
												oname
											StringLiteralExpr
										jkmainOname
									registerComponent
										getJkMain
										jkmainOname
										StringLiteralExpr
										getRegistry
											NullLiteralExpr
											NullLiteralExpr
											Registry
					start
						getJkMain
	MethodDeclaration
		BlockStmt
			IfStmt
				!
					paused
				BlockStmt
					paused
					BooleanLiteralExpr
					pause
						getJkMain
	MethodDeclaration
		BlockStmt
			IfStmt
				paused
				BlockStmt
					paused
					BooleanLiteralExpr
					resume
						getJkMain
	MethodDeclaration
		BlockStmt
			IfStmt
				!
					started
				ReturnStmt
			started
			BooleanLiteralExpr
			stop
				getJkMain
	MethodDeclaration
		BlockStmt
			IfStmt
				isLogTimeEnabled
					ep
				setLong
					MsgContext
					currentTimeMillis
						System
					ep
			VariableDeclarator
				getRequest
					ep
				req
			VariableDeclarator
				getResponse
					req
				res
			IfStmt
				isDebugEnabled
					log
				debug
					+
						+
							+
								+
									+
										StringLiteralExpr
										req
									StringLiteralExpr
								res
							StringLiteralExpr
						toString
							requestURI
								req
					log
			setNote
				epNote
				ep
				res
			setStatus
				MsgContext
				ep
			VariableDeclarator
				getRequestProcessor
					req
				rp
			setStage
				Constants
				rp
			TryStmt
				CatchClause
					BlockStmt
						setStatus
							MsgContext
							ep
						info
							+
								StringLiteralExpr
								req
							t
							log
				BlockStmt
					service
						req
						res
						adapter
			IfStmt
				!=
					getStatus
						ep
					MsgContext
				BlockStmt
					finish
						res
			updateCounters
				req
			recycle
				req
			recycle
				res
			recycle
				ep
			IfStmt
				==
					getStatus
						ep
					MsgContext
				BlockStmt
					ReturnStmt
						ERROR
			setStatus
				MsgContext
				ep
			setStage
				Constants
				rp
			ReturnStmt
				OK
		PrimitiveType
	MethodDeclaration
		BlockStmt
			StringLiteralExpr
			ReturnStmt
				preRegister
					server
					oname
					SuperExpr

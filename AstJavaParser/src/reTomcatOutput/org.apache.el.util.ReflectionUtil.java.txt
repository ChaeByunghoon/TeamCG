ClassOrInterfaceDeclaration
	FieldDeclaration
		VariableDeclarator
			EMPTY_STRING
	FieldDeclaration
		VariableDeclarator
			ArrayInitializerExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
				StringLiteralExpr
			PRIMITIVE_NAMES
	FieldDeclaration
		VariableDeclarator
			ArrayInitializerExpr
				ClassExpr
					PrimitiveType
				ClassExpr
					PrimitiveType
				ClassExpr
					PrimitiveType
				ClassExpr
					PrimitiveType
				ClassExpr
					PrimitiveType
				ClassExpr
					PrimitiveType
				ClassExpr
					PrimitiveType
				ClassExpr
					PrimitiveType
				Void
			PRIMITIVES
	ConstructorDeclaration
		BlockStmt
	MethodDeclaration
		BlockStmt
			IfStmt
				||
					==
						NullLiteralExpr
						name
					equals
						name
						StringLiteralExpr
				BlockStmt
					ReturnStmt
						NullLiteralExpr
			VariableDeclarator
				forNamePrimitive
					name
				c
			IfStmt
				==
					c
					NullLiteralExpr
				BlockStmt
					IfStmt
						endsWith
							StringLiteralExpr
							name
						BlockStmt
							c
							forName
								name
								BooleanLiteralExpr
								getContextClassLoader
									currentThread
										Thread
								Class
						BlockStmt
							VariableDeclarator
								substring
									-
										length
											name
									name
								nc
							c
							forName
								nc
								BooleanLiteralExpr
								getContextClassLoader
									currentThread
										Thread
								Class
							c
							getClass
								newInstance
									c
									Array
			ReturnStmt
				c
	MethodDeclaration
		BlockStmt
			IfStmt
				<=
					length
						name
				BlockStmt
					VariableDeclarator
						binarySearch
							PRIMITIVE_NAMES
							name
							Arrays
						p
						PrimitiveType
					IfStmt
						>=
							p
						BlockStmt
							ReturnStmt
								p
								PRIMITIVES
			ReturnStmt
				NullLiteralExpr
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					s
					NullLiteralExpr
				ReturnStmt
					NullLiteralExpr
			VariableDeclarator
				s
				c
			ForStmt
				BlockStmt
					i
					c
					forName
						i
						s
				<
					i
					s
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			ReturnStmt
				c
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					c
					NullLiteralExpr
				ReturnStmt
					NullLiteralExpr
			VariableDeclarator
				c
				s
			ForStmt
				BlockStmt
					i
					s
					getName
						i
						c
				<
					i
					c
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			ReturnStmt
				s
	MethodDeclaration
		BlockStmt
			IfStmt
				||
					==
						base
						NullLiteralExpr
					==
						property
						NullLiteralExpr
				BlockStmt
					ThrowStmt
						get
							StringLiteralExpr
							base
							property
							paramString
								paramTypes
							MessageFactory
			VariableDeclarator
				property
				toString
					property
				property
				methodName
			VariableDeclarator
				NullLiteralExpr
				method
			TryStmt
				CatchClause
					BlockStmt
						ThrowStmt
							get
								StringLiteralExpr
								base
								property
								paramString
									paramTypes
								MessageFactory
				BlockStmt
					method
					getMethod
						methodName
						paramTypes
						getClass
							base
			ReturnStmt
				method
	MethodDeclaration
		BlockStmt
			IfStmt
				!=
					types
					NullLiteralExpr
				BlockStmt
					VariableDeclarator
						sb
					ForStmt
						BlockStmt
							append
								StringLiteralExpr
								append
									getName
										i
										types
									sb
						<
							i
							types
						VariableDeclarator
							i
							PrimitiveType
						++
							i
					IfStmt
						>
							length
								sb
						BlockStmt
							setLength
								-
									length
										sb
								sb
					ReturnStmt
						toString
							sb
			ReturnStmt
				NullLiteralExpr
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				coerceToString
					property
					ELSupport
				name
			VariableDeclarator
				NullLiteralExpr
				p
			TryStmt
				CatchClause
					BlockStmt
						ThrowStmt
							ie
				BlockStmt
					VariableDeclarator
						getPropertyDescriptors
							getBeanInfo
								getClass
									base
								Introspector
						desc
					ForStmt
						BlockStmt
							IfStmt
								equals
									name
									getName
										i
										desc
								BlockStmt
									ReturnStmt
										i
										desc
						<
							i
							desc
						VariableDeclarator
							i
							PrimitiveType
						++
							i
			ThrowStmt
				get
					StringLiteralExpr
					base
					name
					MessageFactory

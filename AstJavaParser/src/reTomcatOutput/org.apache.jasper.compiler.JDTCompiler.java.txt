ClassOrInterfaceDeclaration
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				t1
				PrimitiveType
			IfStmt
				isDebugEnabled
					log
				BlockStmt
					t1
					currentTimeMillis
						System
			VariableDeclarator
				getServletJavaFileName
					ctxt
				sourceFile
			VariableDeclarator
				getAbsolutePath
					getScratchDir
						getOptions
							ctxt
				outputDir
			VariableDeclarator
				getServletPackageName
					ctxt
				packageName
			VariableDeclarator
				+
					!=
						length
							packageName
					StringLiteralExpr
					+
						packageName
						StringLiteralExpr
					getServletClassName
						ctxt
				targetClassName
			VariableDeclarator
				getJspLoader
					ctxt
				classLoader
			VariableDeclarator
				ArrayInitializerExpr
					sourceFile
				fileNames
			VariableDeclarator
				ArrayInitializerExpr
					targetClassName
				classNames
			VariableDeclarator
				problemList
			ClassOrInterfaceDeclaration
				FieldDeclaration
					VariableDeclarator
						className
				FieldDeclaration
					VariableDeclarator
						sourceFile
				ConstructorDeclaration
					BlockStmt
						className
						sourceFile
				MethodDeclaration
					BlockStmt
						ReturnStmt
							toCharArray
								sourceFile
					PrimitiveType
				MethodDeclaration
					BlockStmt
						VariableDeclarator
							NullLiteralExpr
							result
							PrimitiveType
						VariableDeclarator
							NullLiteralExpr
							is
						TryStmt
							CatchClause
								BlockStmt
									error
										StringLiteralExpr
										e
										log
							BlockStmt
								IfStmt
									!=
										is
										NullLiteralExpr
									BlockStmt
										TryStmt
											CatchClause
												BlockStmt
											BlockStmt
												close
													is
							BlockStmt
								is
								sourceFile
								VariableDeclarator
									is
									getJavaEncoding
										getOptions
											ctxt
									reader
								IfStmt
									!=
										reader
										NullLiteralExpr
									BlockStmt
										VariableDeclarator
											PrimitiveType
											chars
											PrimitiveType
										VariableDeclarator
											buf
										VariableDeclarator
											count
											PrimitiveType
										WhileStmt
											BlockStmt
												append
													chars
													count
													buf
											>
												count
												read
													chars
													chars
													reader
										result
										PrimitiveType
										length
											buf
										getChars
											result
											result
											buf
						ReturnStmt
							result
					PrimitiveType
				MethodDeclaration
					BlockStmt
						VariableDeclarator
							lastIndexOf
								CharLiteralExpr
								className
							dot
							PrimitiveType
						IfStmt
							>
								dot
							BlockStmt
								ReturnStmt
									toCharArray
										substring
											+
												dot
											className
						ReturnStmt
							toCharArray
								className
					PrimitiveType
				MethodDeclaration
					BlockStmt
						VariableDeclarator
							className
							StringLiteralExpr
							izer
						VariableDeclarator
							PrimitiveType
							-
								countTokens
									izer
							result
							PrimitiveType
						ForStmt
							BlockStmt
								VariableDeclarator
									nextToken
										izer
									tok
								i
								result
								toCharArray
									tok
							<
								i
								result
							VariableDeclarator
								i
								PrimitiveType
							++
								i
						ReturnStmt
							result
					PrimitiveType
				MethodDeclaration
					BlockStmt
						ReturnStmt
							BooleanLiteralExpr
					PrimitiveType
			VariableDeclarator
				MethodDeclaration
					BlockStmt
						VariableDeclarator
							StringLiteralExpr
							result
						VariableDeclarator
							StringLiteralExpr
							sep
						ForStmt
							BlockStmt
								result
								sep
								result
								i
								compoundTypeName
								sep
								StringLiteralExpr
							<
								i
								compoundTypeName
							VariableDeclarator
								i
								PrimitiveType
							++
								i
						ReturnStmt
							findType
								result
					PrimitiveType
				MethodDeclaration
					BlockStmt
						VariableDeclarator
							StringLiteralExpr
							result
						VariableDeclarator
							StringLiteralExpr
							sep
						ForStmt
							BlockStmt
								result
								sep
								result
								i
								packageName
								sep
								StringLiteralExpr
							<
								i
								packageName
							VariableDeclarator
								i
								PrimitiveType
							++
								i
						result
						sep
						result
						typeName
						ReturnStmt
							findType
								result
					PrimitiveType
					PrimitiveType
				MethodDeclaration
					BlockStmt
						VariableDeclarator
							NullLiteralExpr
							is
						TryStmt
							CatchClause
								BlockStmt
									error
										StringLiteralExpr
										exc
										log
							CatchClause
								BlockStmt
									error
										StringLiteralExpr
										exc
										log
							BlockStmt
								IfStmt
									!=
										is
										NullLiteralExpr
									BlockStmt
										TryStmt
											CatchClause
												BlockStmt
											BlockStmt
												close
													is
							BlockStmt
								IfStmt
									equals
										targetClassName
										className
									BlockStmt
										VariableDeclarator
											sourceFile
											className
											compilationUnit
										ReturnStmt
											compilationUnit
											NullLiteralExpr
								VariableDeclarator
									+
										replace
											CharLiteralExpr
											CharLiteralExpr
											className
										StringLiteralExpr
									resourceName
								is
								getResourceAsStream
									resourceName
									classLoader
								IfStmt
									!=
										is
										NullLiteralExpr
									BlockStmt
										VariableDeclarator
											classBytes
											PrimitiveType
										VariableDeclarator
											PrimitiveType
											buf
											PrimitiveType
										VariableDeclarator
											buf
											baos
										VariableDeclarator
											count
											PrimitiveType
										WhileStmt
											BlockStmt
												write
													buf
													count
													baos
											>
												count
												read
													buf
													buf
													is
										flush
											baos
										classBytes
										toByteArray
											baos
										VariableDeclarator
											toCharArray
												className
											fileName
											PrimitiveType
										VariableDeclarator
											classBytes
											fileName
											BooleanLiteralExpr
											classFileReader
										ReturnStmt
											classFileReader
											NullLiteralExpr
						ReturnStmt
							NullLiteralExpr
				MethodDeclaration
					BlockStmt
						IfStmt
							equals
								targetClassName
								result
							BlockStmt
								ReturnStmt
									BooleanLiteralExpr
						VariableDeclarator
							+
								replace
									CharLiteralExpr
									CharLiteralExpr
									result
								StringLiteralExpr
							resourceName
						VariableDeclarator
							getResourceAsStream
								resourceName
								classLoader
							is
						ReturnStmt
							==
								is
								NullLiteralExpr
					PrimitiveType
				MethodDeclaration
					BlockStmt
						VariableDeclarator
							StringLiteralExpr
							result
						VariableDeclarator
							StringLiteralExpr
							sep
						IfStmt
							!=
								parentPackageName
								NullLiteralExpr
							BlockStmt
								ForStmt
									BlockStmt
										result
										sep
										VariableDeclarator
											i
											parentPackageName
											str
										result
										str
										sep
										StringLiteralExpr
									<
										i
										parentPackageName
									VariableDeclarator
										i
										PrimitiveType
									++
										i
						VariableDeclarator
							packageName
							str
						IfStmt
							isUpperCase
								charAt
									str
								Character
							BlockStmt
								IfStmt
									!
										isPackage
											result
									BlockStmt
										ReturnStmt
											BooleanLiteralExpr
						result
						sep
						result
						str
						ReturnStmt
							isPackage
								result
					PrimitiveType
					PrimitiveType
					PrimitiveType
				MethodDeclaration
					BlockStmt
				env
			VariableDeclarator
				proceedWithAllProblems
					DefaultErrorHandlingPolicies
				policy
			VariableDeclarator
				settings
			put
				CompilerOptions
				CompilerOptions
				settings
			put
				CompilerOptions
				CompilerOptions
				settings
			put
				CompilerOptions
				CompilerOptions
				settings
			IfStmt
				!=
					getJavaEncoding
						getOptions
							ctxt
					NullLiteralExpr
				BlockStmt
					put
						CompilerOptions
						getJavaEncoding
							getOptions
								ctxt
						settings
			IfStmt
				getClassDebugInfo
					getOptions
						ctxt
				BlockStmt
					put
						CompilerOptions
						CompilerOptions
						settings
			IfStmt
				!=
					getCompilerSourceVM
						getOptions
							ctxt
					NullLiteralExpr
				BlockStmt
					put
						CompilerOptions
						CompilerOptions
						settings
				BlockStmt
					VariableDeclarator
						getCompilerSourceVM
							getOptions
								ctxt
						opt
					IfStmt
						equals
							StringLiteralExpr
							opt
						IfStmt
							equals
								StringLiteralExpr
								opt
							IfStmt
								equals
									StringLiteralExpr
									opt
								IfStmt
									equals
										StringLiteralExpr
										opt
									IfStmt
										equals
											StringLiteralExpr
											opt
										IfStmt
											equals
												StringLiteralExpr
												opt
											IfStmt
												equals
													StringLiteralExpr
													opt
												BlockStmt
													warn
														+
															+
																StringLiteralExpr
																opt
															StringLiteralExpr
														log
													put
														CompilerOptions
														CompilerOptions
														settings
												BlockStmt
													put
														CompilerOptions
														CompilerOptions
														settings
											BlockStmt
												put
													CompilerOptions
													CompilerOptions
													settings
										BlockStmt
											put
												CompilerOptions
												CompilerOptions
												settings
									BlockStmt
										put
											CompilerOptions
											CompilerOptions
											settings
								BlockStmt
									put
										CompilerOptions
										CompilerOptions
										settings
							BlockStmt
								put
									CompilerOptions
									CompilerOptions
									settings
						BlockStmt
							put
								CompilerOptions
								CompilerOptions
								settings
			IfStmt
				!=
					getCompilerTargetVM
						getOptions
							ctxt
					NullLiteralExpr
				BlockStmt
					put
						CompilerOptions
						CompilerOptions
						settings
					put
						CompilerOptions
						CompilerOptions
						settings
				BlockStmt
					VariableDeclarator
						getCompilerTargetVM
							getOptions
								ctxt
						opt
					IfStmt
						equals
							StringLiteralExpr
							opt
						IfStmt
							equals
								StringLiteralExpr
								opt
							IfStmt
								equals
									StringLiteralExpr
									opt
								IfStmt
									equals
										StringLiteralExpr
										opt
									IfStmt
										equals
											StringLiteralExpr
											opt
										IfStmt
											equals
												StringLiteralExpr
												opt
											IfStmt
												equals
													StringLiteralExpr
													opt
												BlockStmt
													warn
														+
															+
																StringLiteralExpr
																opt
															StringLiteralExpr
														log
													put
														CompilerOptions
														CompilerOptions
														settings
												BlockStmt
													put
														CompilerOptions
														CompilerOptions
														settings
													put
														CompilerOptions
														CompilerOptions
														settings
											BlockStmt
												put
													CompilerOptions
													CompilerOptions
													settings
												put
													CompilerOptions
													CompilerOptions
													settings
										BlockStmt
											put
												CompilerOptions
												CompilerOptions
												settings
											put
												CompilerOptions
												CompilerOptions
												settings
									BlockStmt
										put
											CompilerOptions
											CompilerOptions
											settings
								BlockStmt
									put
										CompilerOptions
										CompilerOptions
										settings
							BlockStmt
								put
									CompilerOptions
									CompilerOptions
									settings
						BlockStmt
							put
								CompilerOptions
								CompilerOptions
								settings
			VariableDeclarator
				getDefault
					Locale
				problemFactory
			VariableDeclarator
				MethodDeclaration
					BlockStmt
						TryStmt
							CatchClause
								BlockStmt
									error
										StringLiteralExpr
										exc
										log
							BlockStmt
								IfStmt
									hasProblems
										result
									BlockStmt
										VariableDeclarator
											getProblems
												result
											problems
										ForStmt
											BlockStmt
												VariableDeclarator
													i
													problems
													problem
												IfStmt
													isError
														problem
													BlockStmt
														VariableDeclarator
															getOriginatingFileName
																i
																problems
															name
														TryStmt
															CatchClause
																BlockStmt
																	error
																		StringLiteralExpr
																		e
																		log
															BlockStmt
																add
																	createJavacError
																		name
																		pageNodes
																		getMessage
																			problem
																		getSourceLineNumber
																			problem
																		ctxt
																		ErrorDispatcher
																	problemList
											<
												i
												problems
											VariableDeclarator
												i
												PrimitiveType
											++
												i
								IfStmt
									isEmpty
										problemList
									BlockStmt
										VariableDeclarator
											getClassFiles
												result
											classFiles
										ForStmt
											BlockStmt
												VariableDeclarator
													i
													classFiles
													classFile
												VariableDeclarator
													getCompoundName
														classFile
													compoundName
													PrimitiveType
												VariableDeclarator
													StringLiteralExpr
													className
												VariableDeclarator
													StringLiteralExpr
													sep
												ForStmt
													BlockStmt
														className
														sep
														className
														j
														compoundName
														sep
														StringLiteralExpr
													<
														j
														compoundName
													VariableDeclarator
														j
														PrimitiveType
													++
														j
												VariableDeclarator
													getBytes
														classFile
													bytes
													PrimitiveType
												VariableDeclarator
													+
														+
															+
																outputDir
																StringLiteralExpr
															replace
																CharLiteralExpr
																CharLiteralExpr
																className
														StringLiteralExpr
													outFile
												VariableDeclarator
													outFile
													fout
												VariableDeclarator
													fout
													bos
												write
													bytes
													bos
												close
													bos
											<
												i
												classFiles
											VariableDeclarator
												i
												PrimitiveType
											++
												i
				requestor
			VariableDeclarator
				classNames
				compilationUnits
			ForStmt
				BlockStmt
					VariableDeclarator
						i
						classNames
						className
					i
					compilationUnits
					i
					fileNames
					className
				<
					i
					compilationUnits
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			VariableDeclarator
				env
				policy
				settings
				requestor
				problemFactory
				BooleanLiteralExpr
				compiler
			compile
				compilationUnits
				compiler
			IfStmt
				!
					keepGenerated
						ctxt
				BlockStmt
					VariableDeclarator
						getServletJavaFileName
							ctxt
						javaFile
					delete
						javaFile
			IfStmt
				!
					isEmpty
						problemList
				BlockStmt
					VariableDeclarator
						toArray
							problemList
						jeds
					javacError
						jeds
						errDispatcher
			IfStmt
				isDebugEnabled
					log
				BlockStmt
					VariableDeclarator
						currentTimeMillis
							System
						t2
						PrimitiveType
					debug
						+
							+
								+
									+
										StringLiteralExpr
										getServletJavaFileName
											ctxt
									StringLiteralExpr
								-
									t2
									t1
							StringLiteralExpr
						log
			IfStmt
				isPrototypeMode
					ctxt
				BlockStmt
					ReturnStmt
			IfStmt
				!
					isSmapSuppressed
						options
				BlockStmt
					installSmap
						smap
						SmapUtil

ClassOrInterfaceDeclaration
	FieldDeclaration
		VariableDeclarator
			size
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			resolvers
	ConstructorDeclaration
		BlockStmt
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					elResolver
					NullLiteralExpr
				BlockStmt
					ThrowStmt
			IfStmt
				>=
				BlockStmt
					VariableDeclarator
						*
						nr
					arraycopy
						nr
						System
					nr
			++
			elResolver
	MethodDeclaration
		BlockStmt
			setPropertyResolved
				BooleanLiteralExpr
				context
			VariableDeclarator
				sz
				PrimitiveType
			VariableDeclarator
				NullLiteralExpr
				result
			ForStmt
				BlockStmt
					result
					getValue
						context
						base
						property
						i
					IfStmt
						isPropertyResolved
							context
						BlockStmt
							ReturnStmt
								result
				<
					i
					sz
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			ReturnStmt
				NullLiteralExpr
	MethodDeclaration
		BlockStmt
			setPropertyResolved
				BooleanLiteralExpr
				context
			VariableDeclarator
				sz
				PrimitiveType
			ForStmt
				BlockStmt
					setValue
						context
						base
						property
						value
						i
					IfStmt
						isPropertyResolved
							context
						BlockStmt
							ReturnStmt
				<
					i
					sz
				VariableDeclarator
					i
					PrimitiveType
				++
					i
	MethodDeclaration
		BlockStmt
			setPropertyResolved
				BooleanLiteralExpr
				context
			VariableDeclarator
				sz
				PrimitiveType
			VariableDeclarator
				BooleanLiteralExpr
				readOnly
				PrimitiveType
			ForStmt
				BlockStmt
					readOnly
					isReadOnly
						context
						base
						property
						i
					IfStmt
						isPropertyResolved
							context
						BlockStmt
							ReturnStmt
								readOnly
				<
					i
					sz
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			ReturnStmt
				BooleanLiteralExpr
		PrimitiveType
	MethodDeclaration
		BlockStmt
			ReturnStmt
				context
				base
	MethodDeclaration
		BlockStmt
			VariableDeclarator
				sz
				PrimitiveType
			VariableDeclarator
				NullLiteralExpr
				commonType
			VariableDeclarator
				NullLiteralExpr
				type
			ForStmt
				BlockStmt
					type
					getCommonPropertyType
						context
						base
						i
					IfStmt
						&&
							!=
								type
								NullLiteralExpr
							||
								==
									commonType
									NullLiteralExpr
								isAssignableFrom
									type
									commonType
						BlockStmt
							commonType
							type
				<
					i
					sz
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			ReturnStmt
				commonType
	MethodDeclaration
		BlockStmt
			setPropertyResolved
				BooleanLiteralExpr
				context
			VariableDeclarator
				sz
				PrimitiveType
			VariableDeclarator
				type
			ForStmt
				BlockStmt
					type
					getType
						context
						base
						property
						i
					IfStmt
						isPropertyResolved
							context
						BlockStmt
							ReturnStmt
								type
				<
					i
					sz
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			ReturnStmt
				NullLiteralExpr
	ClassOrInterfaceDeclaration
		FieldDeclaration
			VariableDeclarator
				context
		FieldDeclaration
			VariableDeclarator
				base
		FieldDeclaration
			VariableDeclarator
				resolvers
		FieldDeclaration
			VariableDeclarator
				size
				PrimitiveType
		FieldDeclaration
			VariableDeclarator
				itr
		FieldDeclaration
			VariableDeclarator
				idx
				PrimitiveType
		FieldDeclaration
			VariableDeclarator
				next
		ConstructorDeclaration
			BlockStmt
				context
				base
				resolvers
				size
				guaranteeIterator
			PrimitiveType
		MethodDeclaration
			BlockStmt
				WhileStmt
					BlockStmt
						getFeatureDescriptors
						++
					&&
						==
							NullLiteralExpr
						<
		MethodDeclaration
			BlockStmt
				IfStmt
					!=
						NullLiteralExpr
					ReturnStmt
						BooleanLiteralExpr
				IfStmt
					!=
						NullLiteralExpr
					BlockStmt
						ReturnStmt
							BooleanLiteralExpr
					BlockStmt
						WhileStmt
							BlockStmt
								next
									itr
							&&
								==
									NullLiteralExpr
								hasNext
									itr
				IfStmt
					==
						NullLiteralExpr
					BlockStmt
						NullLiteralExpr
						guaranteeIterator
				ReturnStmt
					hasNext
			PrimitiveType
		MethodDeclaration
			BlockStmt
				IfStmt
					!
						hasNext
					ThrowStmt
				VariableDeclarator
					next
				NullLiteralExpr
				ReturnStmt
					next
		MethodDeclaration
			BlockStmt
				ThrowStmt

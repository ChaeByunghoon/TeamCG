ClassOrInterfaceDeclaration
	FieldDeclaration
		VariableDeclarator
			getName
				ClassExpr
			KEY
	FieldDeclaration
		VariableDeclarator
			expressionFactory
	FieldDeclaration
		VariableDeclarator
			contextListeners
	FieldDeclaration
		VariableDeclarator
			resolvers
	FieldDeclaration
		VariableDeclarator
			BooleanLiteralExpr
			instantiated
			PrimitiveType
	FieldDeclaration
		VariableDeclarator
			resolver
	ConstructorDeclaration
		BlockStmt
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					listener
					NullLiteralExpr
				BlockStmt
					ThrowStmt
						StringLiteralExpr
			add
				listener
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					context
					NullLiteralExpr
				BlockStmt
					ThrowStmt
						StringLiteralExpr
			VariableDeclarator
				getAttribute
					KEY
					context
				impl
			IfStmt
				==
					impl
					NullLiteralExpr
				BlockStmt
					impl
					setAttribute
						KEY
						impl
						context
			ReturnStmt
				impl
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					context
					NullLiteralExpr
				BlockStmt
					ThrowStmt
						StringLiteralExpr
			VariableDeclarator
				createELResolver
				r
			VariableDeclarator
				ctx
			IfStmt
				Constants
				BlockStmt
					ctx
					r
				BlockStmt
					ctx
					doPrivileged
						MethodDeclaration
							BlockStmt
								ReturnStmt
									r
						AccessController
			putContext
				ClassExpr
				context
				ctx
			VariableDeclarator
				ctx
				event
			ForStmt
				BlockStmt
					contextCreated
						event
						get
							i
				<
					i
					size
				VariableDeclarator
					i
					PrimitiveType
				++
					i
			ReturnStmt
				ctx
	MethodDeclaration
		BlockStmt
			BooleanLiteralExpr
			IfStmt
				==
					NullLiteralExpr
				BlockStmt
					VariableDeclarator
						r
					add
						r
					ForStmt
						BlockStmt
							add
								next
									itr
								r
						hasNext
							itr
						VariableDeclarator
							iterator
							itr
					add
						r
					add
						r
					add
						r
					add
						r
					add
						r
					add
						r
					r
			ReturnStmt
	MethodDeclaration
		BlockStmt
			IfStmt
				==
					resolver
					NullLiteralExpr
				BlockStmt
					ThrowStmt
						StringLiteralExpr
			IfStmt
				BlockStmt
					ThrowStmt
						StringLiteralExpr
			add
				resolver
	MethodDeclaration
		BlockStmt
			ReturnStmt
				expressionFactory
